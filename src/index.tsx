

          // ---------- import React Packs
          import React from 'react';
          import * as RN from 'react-native';

          // ---------- import Variables Pack
          import { create } from 'zustand';

          // ---------- import Local Tools
          import { mapElements } from './tools/base/project/mapElements';
          import * as functions from './tools/base/functions';
          import * as Elements from './tools/base/Elements';
          import { Project } from './tools/base/project';
          import * as jsvals from './tools/base/jsvals';
          import { props } from './tools/base/props';
          import * as customs from './tools/customs';
          import * as stls from './tools/base/stls';
          import { tools } from './tools';

          // ---------- set Caps Inputs
          const currRoute = 'home';

          let args: any = [];

          const screens = [
            
        
        
        () => <>{/*functions library*/}</>, 
        
        
        () => <>{/*styles library*/}</>, 
        
        
        () => <>{/*elements library*/}</>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"ab0login",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "260px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "A1 Login ADM"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a1login");
        }
        ],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "B1 Login APP"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b1login");
        }
        ],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Dev Tools"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a0devtools");
        }
        ],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Design System"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("dsIcons");
        }
        , 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.iconsDS"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.menuForms"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.menuViews"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Testing Now"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        ],

          startFunctions:[
        async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }}), async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "permissions"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"a1login",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "transparent"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "60%"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "60%"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
    stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "37px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "140px"
        }})] }})],

      URIvariablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.utils.logo"
        }})
        }})],

      args,
    }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "300px"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.login"
        }})
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.login"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.password"
        }})
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.IptTxtPassword pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.loginUsing"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.margin({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "4px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "Email ou senha incorretos."
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "red"
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "90px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.confirm"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.firebase.where({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "permissions"
        }})],
            arrWhere: [(...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userEmail"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.login"
        }})
        }})],
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.users.userData"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "Email ou senha incorretos."
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: "Adm"
        }})],
          functionsTrue: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a2users");
        }
        ],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: "Manager"
        }})],
          functionsTrue: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a8Permissions");
        }
        ],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: "Reader"
        }})],
          functionsTrue: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a6Products");
        }
        ],
          functionsFalse: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.boxCardCenter"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.userBlock"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "userBlock"
        }})
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          functionsFalse: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "Email ou senha incorretos."
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a1login");
        }
        ],
          args
        }})],
          args
        }})],
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30%"
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "260px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.userBlock"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "userBlock"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Usuário bloqueado."
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "red"
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Entre em contato com um administrador  do sistema."
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "OK"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.boxCardCenter"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.userBlock"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a1login");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        ],

          startFunctions:[async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }})],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"a2users",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
    stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "37px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "140px"
        }})] }})],

      URIvariablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.utils.logo"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.userName"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a3profile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a8Permissions");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a2users");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a4map");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a6Products");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.exit"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M9.5 10.5v2a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-11a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v2M6.5 7h7m0 0-2-2m2 2-2 2"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M9.5 10.5V12.5C9.5 12.7652 9.39464 13.0196 9.20711 13.2071C9.01957 13.3946 8.76522 13.5 8.5 13.5H1.5C1.23478 13.5 0.98043 13.3946 0.792893 13.2071C0.605357 13.0196 0.5 12.7652 0.5 12.5V1.5C0.5 1.23478 0.605357 0.98043 0.792893 0.792893C0.98043 0.605357 1.23478 0.5 1.5 0.5H8.5C8.76522 0.5 9.01957 0.605357 9.20711 0.792893C9.39464 0.98043 9.5 1.23478 9.5 1.5V3.5M6.5 7H13.5M13.5 7L11.5 5M13.5 7L11.5 9" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.exit"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.login"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})]
          }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("ab0login");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.bgBigScreen"
        }})
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[[]],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 32
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.bannerView.label"
        }})
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.bannerView.description"
        }})
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.bannerView.addUser"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3user"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.ScrollBar pass={{
            styles: [],
            arrProps: [],
            arrItems: [
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "true"
        }})],

            childrenItems:[(...args:any) => <Elements.Loader pass={{
            size: "small",
            color: jsvals.j8({pass: {
          propertieValues: "red"
        }}),
            args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "400px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "150px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Pesquisar por"
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "2px"
        }})] }}), 
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A2.pickers.searchFilter"
        }})],pathEdit: [''],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [
        jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userName"
        }}), jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userEmail"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "all"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fillRule="evenodd"       d="M6.643 9.929a7.429 7.429 0 1 1 2.93 5.912l-5.366 5.366a1 1 0 0 1-1.414-1.414l5.366-5.366a7.4 7.4 0 0 1-1.516-4.498ZM14.07 4.5a5.429 5.429 0 1 0 0 10.857 5.429 5.429 0 0 0 0-10.857Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M6.64286 9.92857C6.64286 5.82588 9.96874 2.5 14.0714 2.5C18.1741 2.5 21.5 5.82588 21.5 9.92857C21.5 14.0313 18.1741 17.3571 14.0714 17.3571C12.3811 17.3571 10.8215 16.7917 9.57333 15.8409L4.20711 21.2071C3.81658 21.5976 3.18342 21.5976 2.79289 21.2071C2.40237 20.8166 2.40237 20.1834 2.79289 19.7929L8.15912 14.4267C7.20834 13.1785 6.64286 11.6189 6.64286 9.92857ZM14.0714 4.5C11.0733 4.5 8.64286 6.93045 8.64286 9.92857C8.64286 11.4279 9.24938 12.7837 10.2328 13.7672C11.2163 14.7506 12.5721 15.3571 14.0714 15.3571C17.0695 15.3571 19.5 12.9267 19.5 9.92857C19.5 6.93045 17.0695 4.5 14.0714 4.5Z" fill="black"/> </svg>
      `,

      altura: "24px",

      largura: "24px",

      preenchimento: [jsvals.j8({pass: {
          propertieValues: "black"
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [
        async (...args) =>
        functions.firebase.where({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrWhere: [
        (...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userCPF"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})
        }})],
        }}), 
        (...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userName"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userName"
        }})
        }})],
        }}), (...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userEmail"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userEmail"
        }})
        }})],
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hidden"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
          args
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "Nome"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fillRule="evenodd"       d="M6.643 9.929a7.429 7.429 0 1 1 2.93 5.912l-5.366 5.366a1 1 0 0 1-1.414-1.414l5.366-5.366a7.4 7.4 0 0 1-1.516-4.498ZM14.07 4.5a5.429 5.429 0 1 0 0 10.857 5.429 5.429 0 0 0 0-10.857Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M6.64286 9.92857C6.64286 5.82588 9.96874 2.5 14.0714 2.5C18.1741 2.5 21.5 5.82588 21.5 9.92857C21.5 14.0313 18.1741 17.3571 14.0714 17.3571C12.3811 17.3571 10.8215 16.7917 9.57333 15.8409L4.20711 21.2071C3.81658 21.5976 3.18342 21.5976 2.79289 21.2071C2.40237 20.8166 2.40237 20.1834 2.79289 19.7929L8.15912 14.4267C7.20834 13.1785 6.64286 11.6189 6.64286 9.92857ZM14.0714 4.5C11.0733 4.5 8.64286 6.93045 8.64286 9.92857C8.64286 11.4279 9.24938 12.7837 10.2328 13.7672C11.2163 14.7506 12.5721 15.3571 14.0714 15.3571C17.0695 15.3571 19.5 12.9267 19.5 9.92857C19.5 6.93045 17.0695 4.5 14.0714 4.5Z" fill="black"/> </svg>
      `,

      altura: "24px",

      largura: "24px",

      preenchimento: [jsvals.j8({pass: {
          propertieValues: "black"
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [
        async (...args) =>
        functions.firebase.where({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrWhere: [(...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userName"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userName"
        }})
        }})],
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hidden"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
          args
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "E-mail"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fillRule="evenodd"       d="M6.643 9.929a7.429 7.429 0 1 1 2.93 5.912l-5.366 5.366a1 1 0 0 1-1.414-1.414l5.366-5.366a7.4 7.4 0 0 1-1.516-4.498ZM14.07 4.5a5.429 5.429 0 1 0 0 10.857 5.429 5.429 0 0 0 0-10.857Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M6.64286 9.92857C6.64286 5.82588 9.96874 2.5 14.0714 2.5C18.1741 2.5 21.5 5.82588 21.5 9.92857C21.5 14.0313 18.1741 17.3571 14.0714 17.3571C12.3811 17.3571 10.8215 16.7917 9.57333 15.8409L4.20711 21.2071C3.81658 21.5976 3.18342 21.5976 2.79289 21.2071C2.40237 20.8166 2.40237 20.1834 2.79289 19.7929L8.15912 14.4267C7.20834 13.1785 6.64286 11.6189 6.64286 9.92857ZM14.0714 4.5C11.0733 4.5 8.64286 6.93045 8.64286 9.92857C8.64286 11.4279 9.24938 12.7837 10.2328 13.7672C11.2163 14.7506 12.5721 15.3571 14.0714 15.3571C17.0695 15.3571 19.5 12.9267 19.5 9.92857C19.5 6.93045 17.0695 4.5 14.0714 4.5Z" fill="black"/> </svg>
      `,

      altura: "24px",

      largura: "24px",

      preenchimento: [jsvals.j8({pass: {
          propertieValues: "black"
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [
        async (...args) =>
        functions.firebase.where({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrWhere: [(...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userEmail"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userEmail"
        }})
        }})],
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hidden"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
          args
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "CPF"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fillRule="evenodd"       d="M6.643 9.929a7.429 7.429 0 1 1 2.93 5.912l-5.366 5.366a1 1 0 0 1-1.414-1.414l5.366-5.366a7.4 7.4 0 0 1-1.516-4.498ZM14.07 4.5a5.429 5.429 0 1 0 0 10.857 5.429 5.429 0 0 0 0-10.857Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M6.64286 9.92857C6.64286 5.82588 9.96874 2.5 14.0714 2.5C18.1741 2.5 21.5 5.82588 21.5 9.92857C21.5 14.0313 18.1741 17.3571 14.0714 17.3571C12.3811 17.3571 10.8215 16.7917 9.57333 15.8409L4.20711 21.2071C3.81658 21.5976 3.18342 21.5976 2.79289 21.2071C2.40237 20.8166 2.40237 20.1834 2.79289 19.7929L8.15912 14.4267C7.20834 13.1785 6.64286 11.6189 6.64286 9.92857ZM14.0714 4.5C11.0733 4.5 8.64286 6.93045 8.64286 9.92857C8.64286 11.4279 9.24938 12.7837 10.2328 13.7672C11.2163 14.7506 12.5721 15.3571 14.0714 15.3571C17.0695 15.3571 19.5 12.9267 19.5 9.92857C19.5 6.93045 17.0695 4.5 14.0714 4.5Z" fill="black"/> </svg>
      `,

      altura: "24px",

      largura: "24px",

      preenchimento: [jsvals.j8({pass: {
          propertieValues: "black"
        }})],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.firebase.where({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrWhere: [(...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userCPF"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})
        }})],
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hidden"
        }})
        }})]
          }}), async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [
        async (...args) =>
        functions.firebase.where({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrWhere: [(...args) =>
        functions.firebase.whereConds({ args, pass:{
          arrStrings: [
        jsvals.j8({pass: {
          propertieValues: "userCPF"
        }}), 
        jsvals.j8({pass: {
          propertieValues: "=="
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})
        }})],
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hidden"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
          args
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "x"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userCPF"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userName"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }})]
          }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.cleanSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hidden"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.btnSearch"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "all"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.searchBy.name"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "unselected"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.searchBy.email"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "unselected"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.searchBy.CPF"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "unselected"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "#F5D3D3"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyFieldSearch"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.color({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "red"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha o campo para pesquisar."
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "40px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "false"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.contentList.header.name"
        }})
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.contentList.header.email"
        }})
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.contentList.header.CPF"
        }})
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.FlatList2 pass={{
          elementProperties: [
            {}
          ],

          pData: jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }}),

          itemElements: [
            
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "7px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.marginBottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.marginHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.userName"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.userEmail"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.userCPF"
        }}),
          args
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.docId"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userName"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userEmail"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userPassword"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userRG"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userCPF"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userPhone"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userAddress"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userAddress"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.fileUrl"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3ViewUser"
        }})
        }})]
          }})],

          args,
        }}/>
          ],

          args,
        }}/>],

            args,
          }}/>
        ],
            args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "300px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-60px"
        }})] }}), 
stls.right({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "150%"
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3user"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Info Adicional"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "preload"
        }})],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M.5 10.5v1a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1M4 4 7 .5m0 0L10 4M7 .5v9"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M0.5 10.5V11.5C0.5 12.0304 0.710714 12.5391 1.08579 12.9142C1.46086 13.2893 1.96957 13.5 2.5 13.5H11.5C12.0304 13.5 12.5391 13.2893 12.9142 12.9142C13.2893 12.5391 13.5 12.0304 13.5 11.5V10.5M4 4L7 0.5M7 0.5L10 4M7 0.5V9.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Anexar Arquivo"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "loaded"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.file.name"
        }})
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "35px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => ( <Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 3.5h12m-8.5 0V3a2.5 2.5 0 1 1 5 0v.5m-4 2V11m3-5.5V11m-6-7.5h9v9a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-9Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 3.5H13M4.5 3.5V3C4.5 2.33696 4.76339 1.70107 5.23223 1.23223C5.70107 0.763392 6.33696 0.5 7 0.5C7.66304 0.5 8.29893 0.763392 8.76777 1.23223C9.23661 1.70107 9.5 2.33696 9.5 3V3.5M5.5 5.5V11M8.5 5.5V11M2.5 3.5H11.5V12.5C11.5 12.7652 11.3946 13.0196 11.2071 13.2071C11.0196 13.3946 10.7652 13.5 10.5 13.5H3.5C3.23478 13.5 2.98043 13.3946 2.79289 13.2071C2.60536 13.0196 2.5 12.7652 2.5 12.5V3.5Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "preload"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.file"
        }})],
          value: 'no value'
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "preload"
        }})],

            childrenItems:[(...args) => <customs.FilePicker pass={{arrChildren: [

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],styles:[[]],arrFuncs: [
async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "loaded"
        }})
        }})],args}} />],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.uploadFile({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrFiles: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.fileUrl"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: { }
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3ViewUser"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DE USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userAddress"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Info Adicional"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Editar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3EditUser"
        }})
        }})]
          }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3EditUser"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DE USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "transparent"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "PERFIL DO ADMINISTRADOR"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "adm@teste.com"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7addProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "120px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

      URIvariablePath:[jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})],

      args,
    }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args) => <customs.FilePicker pass={{arrChildren: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carregar imagem do produto"
        }})
          ],

          args,

        }}/>],styles:[
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],args}} />],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Valor"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.price"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.uploadFile({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrFiles: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.fileUrl"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: { }
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7viewProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DO PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Label"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.label"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.description"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.availability"
        }})
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Editar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a7editProduct"
        }})
        }})]
          }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7editProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DO PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Label"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a9permission"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR PERMISSÃO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.pickers.typeAccount"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "permissions"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a9EditPermission"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "EDITAR PERMISSÃO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.pickers.typeAccount"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "permissions"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

          startFunctions:[
        async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }}), async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A2.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"a3profile",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
    stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "37px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "140px"
        }})] }})],

      URIvariablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.utils.logo"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.userName"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a3profile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a8Permissions");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a2users");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a4map");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a6Products");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.exit"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M9.5 10.5v2a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-11a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v2M6.5 7h7m0 0-2-2m2 2-2 2"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M9.5 10.5V12.5C9.5 12.7652 9.39464 13.0196 9.20711 13.2071C9.01957 13.3946 8.76522 13.5 8.5 13.5H1.5C1.23478 13.5 0.98043 13.3946 0.792893 13.2071C0.605357 13.0196 0.5 12.7652 0.5 12.5V1.5C0.5 1.23478 0.605357 0.98043 0.792893 0.792893C0.98043 0.605357 1.23478 0.5 1.5 0.5H8.5C8.76522 0.5 9.01957 0.605357 9.20711 0.792893C9.39464 0.98043 9.5 1.23478 9.5 1.5V3.5M6.5 7H13.5M13.5 7L11.5 5M13.5 7L11.5 9" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.exit"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.login"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})]
          }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("ab0login");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.bgBigScreen"
        }})
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "transparent"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

      URIvariablePath:[jsvals.j8({pass: {
          propertieValues: "all.user.userImage"
        }})],

      args,
    }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "transparent"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args) => <customs.FilePicker pass={{arrChildren: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carregar nova imagem"
        }})
          ],

          args,

        }}/>],styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],args}} />, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permitido JPG, GIF ou PNG"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "E-mail"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.j8({pass: {
          propertieValues: "HX3mWh8AWhmXU5DfSZ7s"
        }})],
            arrPathData: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})
        }})],
            arrFuncs: [() => {}],
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
        stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.btnDisable"
        }})
        }})] }}), stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.btnDisable"
        }})
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

          startFunctions:[
        async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }}), async (...args) =>
        functions.firebase.getDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.mock.ID"
        }})
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.userData"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }})],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"a6Products",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
    stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "37px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "140px"
        }})] }})],

      URIvariablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.utils.logo"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.userName"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a3profile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a8Permissions");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a2users");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a4map");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a6Products");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.exit"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M9.5 10.5v2a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-11a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v2M6.5 7h7m0 0-2-2m2 2-2 2"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M9.5 10.5V12.5C9.5 12.7652 9.39464 13.0196 9.20711 13.2071C9.01957 13.3946 8.76522 13.5 8.5 13.5H1.5C1.23478 13.5 0.98043 13.3946 0.792893 13.2071C0.605357 13.0196 0.5 12.7652 0.5 12.5V1.5C0.5 1.23478 0.605357 0.98043 0.792893 0.792893C0.98043 0.605357 1.23478 0.5 1.5 0.5H8.5C8.76522 0.5 9.01957 0.605357 9.20711 0.792893C9.39464 0.98043 9.5 1.23478 9.5 1.5V3.5M6.5 7H13.5M13.5 7L11.5 5M13.5 7L11.5 9" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.exit"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.login"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})]
          }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("ab0login");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.bgBigScreen"
        }})
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[[]],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 32
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos oferecidos"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.bannerView.addUser"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a7addProduct"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A6.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "true"
        }})],

            childrenItems:[(...args:any) => <Elements.Loader pass={{
            size: "small",
            color: jsvals.j8({pass: {
          propertieValues: "red"
        }}),
            args,
        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.ScrollBar pass={{
            styles: [],
            arrProps: [],
            arrItems: [

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "40px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A6.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "false"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produto"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "300px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , (...args:any) => <Elements.FlatList2 pass={{
          elementProperties: [
            {}
          ],

          pData: jsvals.j8({pass: {
          propertieValues: "sc.A6.currData.mainList"
        }}),

          itemElements: [
            
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "7px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.marginBottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.marginHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.label"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.description"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.availability"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "300px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Reservar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a2users");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        ],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.docId"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.docId"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.label"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.description"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.availability"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a7viewProduct"
        }})
        }})]
          }})],

          args,
        }}/>
          ],

          args,
        }}/>],

            args,
          }}/>
        ],
            args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "300px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-60px"
        }})] }}), 
stls.right({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "150%"
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3user"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Info Adicional"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "preload"
        }})],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M.5 10.5v1a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1M4 4 7 .5m0 0L10 4M7 .5v9"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M0.5 10.5V11.5C0.5 12.0304 0.710714 12.5391 1.08579 12.9142C1.46086 13.2893 1.96957 13.5 2.5 13.5H11.5C12.0304 13.5 12.5391 13.2893 12.9142 12.9142C13.2893 12.5391 13.5 12.0304 13.5 11.5V10.5M4 4L7 0.5M7 0.5L10 4M7 0.5V9.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Anexar Arquivo"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "loaded"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.file.name"
        }})
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "35px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => ( <Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 3.5h12m-8.5 0V3a2.5 2.5 0 1 1 5 0v.5m-4 2V11m3-5.5V11m-6-7.5h9v9a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-9Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 3.5H13M4.5 3.5V3C4.5 2.33696 4.76339 1.70107 5.23223 1.23223C5.70107 0.763392 6.33696 0.5 7 0.5C7.66304 0.5 8.29893 0.763392 8.76777 1.23223C9.23661 1.70107 9.5 2.33696 9.5 3V3.5M5.5 5.5V11M8.5 5.5V11M2.5 3.5H11.5V12.5C11.5 12.7652 11.3946 13.0196 11.2071 13.2071C11.0196 13.3946 10.7652 13.5 10.5 13.5H3.5C3.23478 13.5 2.98043 13.3946 2.79289 13.2071C2.60536 13.0196 2.5 12.7652 2.5 12.5V3.5Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "preload"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.file"
        }})],
          value: 'no value'
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "preload"
        }})],

            childrenItems:[(...args) => <customs.FilePicker pass={{arrChildren: [

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],styles:[[]],arrFuncs: [
async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "loaded"
        }})
        }})],args}} />],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.uploadFile({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrFiles: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.fileUrl"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: { }
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3ViewUser"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DE USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userAddress"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Info Adicional"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Editar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3EditUser"
        }})
        }})]
          }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3EditUser"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DE USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "transparent"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "PERFIL DO ADMINISTRADOR"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "adm@teste.com"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7addProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "120px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

      URIvariablePath:[jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})],

      args,
    }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args) => <customs.FilePicker pass={{arrChildren: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carregar imagem do produto"
        }})
          ],

          args,

        }}/>],styles:[
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],args}} />],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Valor"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.price"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.uploadFile({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrFiles: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.fileUrl"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: { }
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7viewProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DO PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Label"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.label"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.description"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.availability"
        }})
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Editar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a7editProduct"
        }})
        }})]
          }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7editProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DO PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Label"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a9permission"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR PERMISSÃO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.pickers.typeAccount"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "permissions"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a9EditPermission"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "EDITAR PERMISSÃO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.pickers.typeAccount"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "permissions"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

          startFunctions:[
        async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }}), async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A6.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A6.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A6.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"a8Permissions",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
    stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "37px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "140px"
        }})] }})],

      URIvariablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.utils.logo"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.userName"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a3profile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.myProfile"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a8Permissions");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a2users");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.users"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a4map");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 5.5c0 1.105-2.015 2-4.5 2S5 6.605 5 5.5m9 0c0-1.105-2.015-2-4.5-2S5 4.395 5 5.5m9 0v6c0 1.1-2 2-4.5 2s-4.5-.9-4.5-2v-6m9 3c0 1.1-2 2-4.5 2S5 9.6 5 8.5m4.4-7a6.77 6.77 0 0 0-3.9-1C3.01.5 1 1.4 1 2.5m0 0c0 .59.58 1.12 1.5 1.5M1 2.5v6c0 .59.58 1.12 1.5 1.5m0-3C1.58 6.62 1 6.09 1 5.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 5.49999C14 6.60456 11.9853 7.49999 9.5 7.49999C7.01472 7.49999 5 6.60456 5 5.49999M14 5.49999C14 4.39542 11.9853 3.49999 9.5 3.49999C7.01472 3.49999 5 4.39542 5 5.49999M14 5.49999V11.5C14 12.6 12 13.5 9.5 13.5C7 13.5 5 12.6 5 11.5V5.49999M14 8.49999C14 9.59999 12 10.5 9.5 10.5C7 10.5 5 9.59999 5 8.49999M9.4 1.49999C8.23149 0.778863 6.87133 0.430103 5.5 0.499987C3.01 0.499987 1 1.39999 1 2.49999M1 2.49999C1 3.08999 1.58 3.61999 2.5 3.99999M1 2.49999V8.49999C1 9.08999 1.58 9.61999 2.5 9.99999M2.5 6.99999C1.58 6.61999 1 6.08999 1 5.49999" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.map"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("a6Products");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.purple"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.exit"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M9.5 10.5v2a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-11a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v2M6.5 7h7m0 0-2-2m2 2-2 2"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M9.5 10.5V12.5C9.5 12.7652 9.39464 13.0196 9.20711 13.2071C9.01957 13.3946 8.76522 13.5 8.5 13.5H1.5C1.23478 13.5 0.98043 13.3946 0.792893 13.2071C0.605357 13.0196 0.5 12.7652 0.5 12.5V1.5C0.5 1.23478 0.605357 0.98043 0.792893 0.792893C0.98043 0.605357 1.23478 0.5 1.5 0.5H8.5C8.76522 0.5 9.01957 0.605357 9.20711 0.792893C9.39464 0.98043 9.5 1.23478 9.5 1.5V3.5M6.5 7H13.5M13.5 7L11.5 5M13.5 7L11.5 9" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.sideLeft.exit"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.login"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.forms.iptsChanges.password"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})]
          }}), 
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.myProfile"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.map"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.permissions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.products"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("ab0login");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.bgBigScreen"
        }})
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[[]],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 32
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Permissões"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.bannerView.description"
        }})
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A2.bannerView.addUser"
        }})
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a9permission"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.ScrollBar pass={{
            styles: [],
            arrProps: [],
            arrItems: [
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A8.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "true"
        }})],

            childrenItems:[(...args:any) => <Elements.Loader pass={{
            size: "small",
            color: jsvals.j8({pass: {
          propertieValues: "red"
        }}),
            args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "40px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A8.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "false"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "E-mail"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , (...args:any) => <Elements.FlatList2 pass={{
          elementProperties: [
            {}
          ],

          pData: jsvals.j8({pass: {
          propertieValues: "sc.A8.currData.mainList"
        }}),

          itemElements: [
            
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "7px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.marginBottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.marginHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.userName"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.userEmail"
        }}),
          args
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#999"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="#999999" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.typeAccount"
        }}),
          args
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.docId"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.docId"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userName"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userEmail"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.userPassword"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.typeAccount"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a9EditPermission"
        }})
        }})]
          }})],

          args,
        }}/>
          ],

          args,
        }}/>],

            args,
          }}/>
        ],
            args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "300px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-60px"
        }})] }}), 
stls.right({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "150%"
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3user"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Info Adicional"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "preload"
        }})],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M.5 10.5v1a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1M4 4 7 .5m0 0L10 4M7 .5v9"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M0.5 10.5V11.5C0.5 12.0304 0.710714 12.5391 1.08579 12.9142C1.46086 13.2893 1.96957 13.5 2.5 13.5H11.5C12.0304 13.5 12.5391 13.2893 12.9142 12.9142C13.2893 12.5391 13.5 12.0304 13.5 11.5V10.5M4 4L7 0.5M7 0.5L10 4M7 0.5V9.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Anexar Arquivo"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "loaded"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.file.name"
        }})
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "35px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => ( <Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 3.5h12m-8.5 0V3a2.5 2.5 0 1 1 5 0v.5m-4 2V11m3-5.5V11m-6-7.5h9v9a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1v-9Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 3.5H13M4.5 3.5V3C4.5 2.33696 4.76339 1.70107 5.23223 1.23223C5.70107 0.763392 6.33696 0.5 7 0.5C7.66304 0.5 8.29893 0.763392 8.76777 1.23223C9.23661 1.70107 9.5 2.33696 9.5 3V3.5M5.5 5.5V11M8.5 5.5V11M2.5 3.5H11.5V12.5C11.5 12.7652 11.3946 13.0196 11.2071 13.2071C11.0196 13.3946 10.7652 13.5 10.5 13.5H3.5C3.23478 13.5 2.98043 13.3946 2.79289 13.2071C2.60536 13.0196 2.5 12.7652 2.5 12.5V3.5Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "preload"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.file"
        }})],
          value: 'no value'
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "200px"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "preload"
        }})],

            childrenItems:[(...args) => <customs.FilePicker pass={{arrChildren: [

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],styles:[[]],arrFuncs: [
async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.toggles.fileUpload"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "loaded"
        }})
        }})],args}} />],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userRG"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userCPF"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.userPhone"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.uploadFile({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrFiles: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.fileUrl"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: { }
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3ViewUser"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DE USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userAddress"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Info Adicional"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Editar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a3EditUser"
        }})
        }})]
          }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3EditUser"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DE USUÁRIO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userCPF"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "transparent"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a3Bprofile"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "PERFIL DO ADMINISTRADOR"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "adm@teste.com"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7addProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
              {
                backgroundColor: 'white',
                justifyContent: 'center',
                minHeight: 22,
                width: "100%",
              }
              ],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "120px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

      URIvariablePath:[jsvals.j8({pass: {
          propertieValues: "all.tempFiles.assets.0.uri"
        }})],

      args,
    }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args) => <customs.FilePicker pass={{arrChildren: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carregar imagem do produto"
        }})
          ],

          args,

        }}/>],styles:[
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],args}} />],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Valor"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.price"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.uploadFile({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrFiles: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.fileUrl"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }}), 
        async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.tempFiles"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: { }
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7viewProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DO PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Label"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.label"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.description"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.editData.availability"
        }})
        }})
          ],

          args,

        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Editar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "a7editProduct"
        }})
        }})]
          }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a7editProduct"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "DADOS DO PRODUTO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Label"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Descrição"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Disponibilidade"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.label"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.description"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges.availability"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "products"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A7.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a9permission"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "ADICIONAR PERMISSÃO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxt2 pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.pickers.typeAccount"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userName"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userEmail"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.userPassword"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.setDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "permissions"
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.iptsChanges"
        }})],
          value: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }})],

            variablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "a9EditPermission"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg
              xmlns="http://www.w3.org/2000/svg"
              width={20}
              height={14}
              viewBox="0 0 20 14"
              {...props}
              >
              <Path
              fillRule="evenodd"
              d="M7.707.293a1 1 0 0 1 0 1.414L3.414 6H19a1 1 0 1 1 0 2H3.414l4.293 4.293a1 1 0 1 1-1.414 1.414l-6-6a1 1 0 0 1 0-1.414l6-6a1 1 0 0 1 1.414 0Z"
              clipRule="evenodd"
              {...props}
              />
              </Svg>)
      },

      svgOriginal: `
        <svg></svg>
      `,

      altura: "16px",

      largura: "16px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "flex-start"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Formulário de"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 500
        }})
        ] }}), 
stls.textAlign({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "EDITAR PERMISSÃO"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "open"
        }})
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-50px"
        }})] }}), stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "open"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Excluir"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [(...args) =>
        functions.firebase.deleteDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.iptsChanges.docId"
        }})
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Tipo de Conta"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.pickers.typeAccount"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Salvar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.userPassword"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.typeAccount"
        }})
        }})],
          expectedValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "vazio"
        }})
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "permissions"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.A9.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Cancelar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.toggles.activeForm"
        }})
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "none"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.activeButton.users"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})]
          }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.rightOptions"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "close"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

          startFunctions:[
        async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }}), async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A8.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "permissions"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A8.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A8.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }})]
          }})],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"b1login",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "260px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
        stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 32
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Start-Morfos"
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.A1.loginUsing"
        }})
        }})
          ],

          args,

        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.margin({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "4px"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.A1.toggles.msgError"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "false"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "red"
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "false"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "90px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "12px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Google"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.firebase.getDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.j8({pass: {
          propertieValues: "Ks6j5JvMONJc6KpvWT5G"
        }})],
            arrFuncs: [async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.userData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.1.userCPF"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B2.forms.editData.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.1.userRG"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B2.forms.editData.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.1.userPhone"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B2.forms.editData.userAddress.address"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.1.userAddress.address"
        }}),
          args
        }})
        }}), 
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.users.userData"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.1"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.1.fullRegister"
        }}),
          args
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: "true"
        }})],
          functionsTrue: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3bikemap");
        }
        ],
          functionsFalse: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b2registro");
        }
        ],
          args
        }})]
          }})],
        }})],

          args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 10
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray3"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Ver app 0.1.0"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

          startFunctions:[()=>{}],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"b2registro",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [()=><></>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.lightSM"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>, 

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[[]],

      URIvariablePath:[jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.utils.logo"
        }})
        }})],

      args,
    }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "70px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "260px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.radio1"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.backDS"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }})],

          childrenItems: [()=><></>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.radio1"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.radio2"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "default radio"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.radio1"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.backDS"
        }})
        }})] }}), 

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.alignSelf({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "default radio"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.radio2"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "inactive"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.backDS"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }})],

          childrenItems: [()=><></>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.radio1"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "inactive"
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.radio2"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "active"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "default radio"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.radio2"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "active"
        }})],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.backDS"
        }})
        }})] }}), 

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }}), 
stls.borderWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.alignSelf({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "default radio"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Avançar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b2cFormUser");
        }
        ],

          args,
        }}/>],

          startFunctions:[()=>{}],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"b2btermos",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={8}     height={14}     fill="red"     viewBox="0 0 8 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M7.15.5 1 6.65a.48.48 0 0 0 0 .7l6.15 6.15"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M7.15003 0.5L1.00003 6.65C0.952199 6.69489 0.914076 6.74911 0.888016 6.80931C0.861956 6.8695 0.848511 6.9344 0.848511 7C0.848511 7.0656 0.861956 7.1305 0.888016 7.19069C0.914076 7.25089 0.952199 7.30511 1.00003 7.35L7.15003 13.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "70px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.ScrollBar pass={{
            styles: [stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],
            arrProps: [],
            arrItems: [
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.maxWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "260px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vitae sem viverra, aliquam purus id, dapibus arcu. Nam pharetra nec felis sit amet placerat. Integer a orci metus. Donec volutpat, sem et rhoncus dictum, dolor neque varius lacus, ut vestibulum mauris turpis et augue. Quisque ullamcorper porta tellus, elementum porta enim. Vivamus ornare leo quis condimentum lacinia. Etiam sit amet nisl nec magna viverra fermentum. Nulla imperdiet vel turpis sed placerat. Morbi luctus, libero id ornare eleifend, urna leo feugiat augue, in scelerisque nibh dui et lacus. Ut a posuere odio, non feugiat turpis. Suspendisse varius lorem vel quam vulputate, condimentum pulvinar ex tempor. Maecenas vel ante non velit tincidunt rutrum imperdiet eu lectus. Maecenas id tortor at mi feugiat elementum in ac purus.  Nunc ornare convallis ornare. Praesent lectus lorem, fermentum vehicula blandit nec, consectetur et magna. Ut ut mauris nec libero facilisis mattis non nec mi. Maecenas sit amet justo sollicitudin, efficitur lacus eget, pellentesque magna. Proin viverra erat ante. Ut vitae auctor orci. Proin egestas, tellus ac sodales ultrices, ante sapien ultrices sapien, ac posuere nunc magna sit amet mi. Fusce interdum felis accumsan, scelerisque dui at, facilisis nibh. Sed feugiat blandit turpis, sed tempor dui rutrum quis.  Proin in turpis libero. Sed finibus ligula id nunc tempus tincidunt. Nullam interdum sodales nisi ut egestas. Cras maximus aliquet mauris nec malesuada. Vivamus vitae mi id quam pulvinar maximus. Donec hendrerit a felis a congue. Vestibulum porta elit sed est fringilla tincidunt. Aliquam tristique nisi sit amet quam tristique tincidunt. Aliquam sed consectetur erat, ac finibus ipsum. Aenean sit amet vehicula ante. Vivamus posuere, nisl in efficitur interdum, ligula augue dignissim quam, nec posuere ex diam eget nisl. Nulla facilisi."
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Avançar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],
            args,
        }}/>],

          startFunctions:[()=>{}],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"bxxPayments",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={12}     fill="red"     viewBox="0 0 14 12"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M13.5 1H.5m13 5H.5m13 5H.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 1H0.5M13.5 6H0.5M13.5 11H0.5" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "15px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.lightSM"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "70px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Total da Compra"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
        stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 16
        }})
        ] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "R$ 149,90"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Número do Cartão"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCCard pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 0000.0000.0000.0000"
        }})]
        }})],

          stylesArray: [
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "2px"
        }})] }}), 
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.number"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.number"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
        
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "65%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Mês"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.IptTxtMaskCustomNumbers pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00"
        }})]
        }})],

          stylesArray: [
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "2px"
        }})] }}), 
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.month"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.month"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          ipt5: [jsvals.j8({pass: {
          propertieValues: "2"
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "45%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Ano"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.IptTxtMaskCustomNumbers pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 0000"
        }})]
        }})],

          stylesArray: [
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "2px"
        }})] }}), 
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.year"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.year"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          ipt5: [jsvals.j8({pass: {
          propertieValues: "4"
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CVV"
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.IptTxtMaskCustomNumbers pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000"
        }})]
        }})],

          stylesArray: [
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "2px"
        }})] }}), 
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.cvv"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.cvv"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],

          ipt5: [jsvals.j8({pass: {
          propertieValues: "3"
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "2px"
        }})] }}), 
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.name"
        }})],

          funcsArray: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.ds.iptsChanges.creditCard.name"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "#0"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "LOGO PAGARME"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.bottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CANCELAR"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={2}     height={14}     fill="red"     viewBox="0 0 2 14"     {...props}   >     <Path       stroke="#000"       strokeLinecap="round"       strokeLinejoin="round"       d="M1 .5v13"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="2" height="14" viewBox="0 0 2 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M1 0.5V13.5" stroke="black" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "10px",

      largura: "35px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})],

      args,
    }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CONFIRMAR"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "80%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={8}     height={14}     fill="red"     viewBox="0 0 8 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M7.15.5 1 6.65a.48.48 0 0 0 0 .7l6.15 6.15"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M7.15003 0.5L1.00003 6.65C0.952199 6.69489 0.914076 6.74911 0.888016 6.80931C0.861956 6.8695 0.848511 6.9344 0.848511 7C0.848511 7.0656 0.861956 7.1305 0.888016 7.19069C0.914076 7.25089 0.952199 7.30511 1.00003 7.35L7.15003 13.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Perfil"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Pagamento"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxPayments");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M12.5 7.5v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h9.5a1 1 0 0 0 1-1V10M4.34 2 10.01.52a.49.49 0 0 1 .61.36L10.9 2m.1 5.5h2.5a.5.5 0 0 1 .5.5v1.5a.5.5 0 0 1-.5.5H11a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12.5 7.50007V5.50007C12.5 5.23486 12.3946 4.9805 12.2071 4.79297C12.0196 4.60543 11.7652 4.50007 11.5 4.50007H2C1.73478 4.50007 1.48043 4.60543 1.29289 4.79297C1.10536 4.9805 1 5.23486 1 5.50007V12.5001C1 12.7653 1.10536 13.0196 1.29289 13.2072C1.48043 13.3947 1.73478 13.5001 2 13.5001H11.5C11.7652 13.5001 12.0196 13.3947 12.2071 13.2072C12.3946 13.0196 12.5 12.7653 12.5 12.5001V10.0001M4.34 2.00007L10.01 0.520072C10.0737 0.50212 10.1404 0.497264 10.206 0.505797C10.2717 0.514329 10.3349 0.536074 10.3919 0.569717C10.4489 0.603361 10.4985 0.648207 10.5377 0.701548C10.5769 0.754888 10.6049 0.815618 10.62 0.880072L10.9 2.00007M11 7.50007H13.5C13.7761 7.50007 14 7.72393 14 8.00007V9.50007C14 9.77621 13.7761 10.0001 13.5 10.0001H11C10.7239 10.0001 10.5 9.77621 10.5 9.50007V8.00007C10.5 7.72393 10.7239 7.50007 11 7.50007Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carteira"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxWallet");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b6Products");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "rgba(0,0,0,0.5)"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          childrenItems: [()=><></>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

          startFunctions:[()=>{}],

          args,
        }}/>, 
        

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"bxxWallet",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={12}     fill="red"     viewBox="0 0 14 12"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M13.5 1H.5m13 5H.5m13 5H.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 1H0.5M13.5 6H0.5M13.5 11H0.5" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "15px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.lightSM"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "70px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.ScrollBar pass={{
            styles: [stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],
            arrProps: [],
            arrItems: [
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Minha Fatura"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.BXX.toggles.loader"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "false"
        }})],

            childrenItems:[(...args:any) => <Elements.FlatList2 pass={{
          elementProperties: [
            {}
          ],

          pData: jsvals.j8({pass: {
          propertieValues: "sc.BXX.currData.mainList"
        }}),

          itemElements: [
            
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "7px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.marginBottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.marginHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

          childrenItems: [
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[[]],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.data"
        }}),
          args
        }})
          ],

          args,

        }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.0.item.valor"
        }}),
          args
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , (...args:any) => <Elements.Text pass={{
          arrProps: [
            
        (...args:any) => props.pt23({ pass: {
          numberToEnter: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})]
        }}), (...args:any) => props.p25({ pass: {
          mode: [jsvals.j8({pass: {
          propertieValues: "tail"
        }})]
        }})
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }})
          ],

          children: [
            jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0.0.item.status"
        }}),
          args
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [()=>console.log("Você Clicou!")],

          args,
        }}/>
          ],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],
            args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.bottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-12px"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "40px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M.5 7 7 .5 13.5 7m-11 1.5v5h9v-5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M0.5 7L7 0.5L13.5 7M2.5 8.5V13.5H11.5V8.5" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b4routes");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M12.5 7.5v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h9.5a1 1 0 0 0 1-1V10M4.34 2 10.01.52a.49.49 0 0 1 .61.36L10.9 2m.1 5.5h2.5a.5.5 0 0 1 .5.5v1.5a.5.5 0 0 1-.5.5H11a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12.5 7.50007V5.50007C12.5 5.23486 12.3946 4.9805 12.2071 4.79297C12.0196 4.60543 11.7652 4.50007 11.5 4.50007H2C1.73478 4.50007 1.48043 4.60543 1.29289 4.79297C1.10536 4.9805 1 5.23486 1 5.50007V12.5001C1 12.7653 1.10536 13.0196 1.29289 13.2072C1.48043 13.3947 1.73478 13.5001 2 13.5001H11.5C11.7652 13.5001 12.0196 13.3947 12.2071 13.2072C12.3946 13.0196 12.5 12.7653 12.5 12.5001V10.0001M4.34 2.00007L10.01 0.520072C10.0737 0.50212 10.1404 0.497264 10.206 0.505797C10.2717 0.514329 10.3349 0.536074 10.3919 0.569717C10.4489 0.603361 10.4985 0.648207 10.5377 0.701548C10.5769 0.754888 10.6049 0.815618 10.62 0.880072L10.9 2.00007M11 7.50007H13.5C13.7761 7.50007 14 7.72393 14 8.00007V9.50007C14 9.77621 13.7761 10.0001 13.5 10.0001H11C10.7239 10.0001 10.5 9.77621 10.5 9.50007V8.00007C10.5 7.72393 10.7239 7.50007 11 7.50007Z" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxWallet");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "80%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={8}     height={14}     fill="red"     viewBox="0 0 8 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M7.15.5 1 6.65a.48.48 0 0 0 0 .7l6.15 6.15"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M7.15003 0.5L1.00003 6.65C0.952199 6.69489 0.914076 6.74911 0.888016 6.80931C0.861956 6.8695 0.848511 6.9344 0.848511 7C0.848511 7.0656 0.861956 7.1305 0.888016 7.19069C0.914076 7.25089 0.952199 7.30511 1.00003 7.35L7.15003 13.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Perfil"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Pagamento"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxPayments");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M12.5 7.5v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h9.5a1 1 0 0 0 1-1V10M4.34 2 10.01.52a.49.49 0 0 1 .61.36L10.9 2m.1 5.5h2.5a.5.5 0 0 1 .5.5v1.5a.5.5 0 0 1-.5.5H11a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12.5 7.50007V5.50007C12.5 5.23486 12.3946 4.9805 12.2071 4.79297C12.0196 4.60543 11.7652 4.50007 11.5 4.50007H2C1.73478 4.50007 1.48043 4.60543 1.29289 4.79297C1.10536 4.9805 1 5.23486 1 5.50007V12.5001C1 12.7653 1.10536 13.0196 1.29289 13.2072C1.48043 13.3947 1.73478 13.5001 2 13.5001H11.5C11.7652 13.5001 12.0196 13.3947 12.2071 13.2072C12.3946 13.0196 12.5 12.7653 12.5 12.5001V10.0001M4.34 2.00007L10.01 0.520072C10.0737 0.50212 10.1404 0.497264 10.206 0.505797C10.2717 0.514329 10.3349 0.536074 10.3919 0.569717C10.4489 0.603361 10.4985 0.648207 10.5377 0.701548C10.5769 0.754888 10.6049 0.815618 10.62 0.880072L10.9 2.00007M11 7.50007H13.5C13.7761 7.50007 14 7.72393 14 8.00007V9.50007C14 9.77621 13.7761 10.0001 13.5 10.0001H11C10.7239 10.0001 10.5 9.77621 10.5 9.50007V8.00007C10.5 7.72393 10.7239 7.50007 11 7.50007Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carteira"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxWallet");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b6Products");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "rgba(0,0,0,0.5)"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          childrenItems: [()=><></>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

          startFunctions:[
        async (...args) =>
        functions.firebase.fireInit({ args, pass:{
          fbConfig: jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.firebaseConfig"
        }})
        }}),
          arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})]
        }}), async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
          async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.BXX.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "true"
        }})
        }}), 
          async (...args) =>
        functions.firebase.getDocs({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [jsvals.j8({pass: {
          propertieValues: "users"
        }})],
            arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A6.currData.mainList"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }})],
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.BXX.toggles.loader"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "false"
        }})
        }})]
          }})],

          args,
        }}/>, 

        (...args: any) => <Elements.Screen3 pass={{
          pathScreen:"b3MyProfile",

          styles:[

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.defaultScreenBg"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.padding({ pass: { arrayValue: ['10px'] }})],

          screenElements:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={12}     fill="red"     viewBox="0 0 14 12"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M13.5 1H.5m13 5H.5m13 5H.5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="12" viewBox="0 0 14 12" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 1H0.5M13.5 6H0.5M13.5 11H0.5" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "15px",

      preenchimento: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.lightSM"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.ScrollBar pass={{
            styles: [stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],
            arrProps: [],
            arrItems: [
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.padding({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [10] }}), stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

    (...args:any) => <Elements.ImageBox pass={{
      elementsProperties:[{}],

      styles:[
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "60px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "60px"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }})],

      URIvariablePath:["https://images.unsplash.com/photo-1488831861984-179da3647265?q=80&w=1228&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"],

      args,
    }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Nome"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userName"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userName"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Email"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userEmail"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userEmail"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Senha"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtEdit pass={{
          propsArray: [{}],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userPassword"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userPassword"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "RG"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskRG pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 00.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userRG"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userRG"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "CPF"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskCPF pass={{
          propsArray: [
        (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }}), (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: 000.000.000-00"
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userCPF"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userCPF"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Telefone"
        }})
          ],

          args,

        }}/>, 
        (...args:any) => <Elements.IptTxtMaskPhone pass={{
          propsArray: [
        (...args:any) => props.placeholder({ pass: {
          text: [jsvals.j8({pass: {
          propertieValues: "Ex.: (00) 00000-0000"
        }})]
        }}), (...args:any) => props.placeholderTextColor({ pass: {
          color: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secondary"
        }})
        }})]
        }})],

          stylesArray: [
stls.borderBottomWidth({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.borderBottomColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.gray5"
        }})
        }})] }}), stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }})],

          editPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userPhone"
        }})],

          funcsArray: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userPhone"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#0"
        }}),
          args
        }})
        }}), async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "show"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), 
stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), stls.fontWeight({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 700
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Endereço"
        }})
          ],

          args,

        }}/>, 
        

        (...args:any) => <Elements.AutocompleteGooglePlaces pass={{
          apiKey: "AIzaSyBJ1MNdqlCOmPXK3taPtmuEJbsrmtiUDxU",
          pathList: [""],
          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        (...args:any) => <Elements.CustomListener pass={{
          
            variable: [''],
            childrenItems: [(...args:any) => <customs.IptPicker pass={{pathList: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.pickers.status"
        }})],pathEdit: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],arrFuncs: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.A3.forms.editData.userStatus"
        }})],
          value: jsvals.argReader({pass: {
          argPath: jsvals.j8({pass: {
          propertieValues: "#1"
        }}),
          args
        }})
        }})],pathReturn: [''],args,}}/>],
            arrFunctions: [()=>console.log("Você Clicou!")],
            args,
        }}/>, 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "3px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "25px"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.danger"
        }})
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "yes"
        }})],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 12
        }})
        ] }}), stls.color({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Preencha todos os campos para prosseguir"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[[]],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "sc.B3.toggles.btnEdit"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
        
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "30px"
        }})] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "6px"
        }})] }}), 
stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "8px"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.primary"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.color({ pass: { arrayValue: ["white"] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Atualizar"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userName"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userEmail"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userPassword"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userRG"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userCPF"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.condition({ args, pass:{
          conditionPath: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData.userPhone"
        }})
        }})],
          expectedValue: [jsvals.j8({pass: {
          propertieValues: ""
        }})],
          functionsTrue: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "yes"
        }})
        }})],
          functionsFalse: [async (...args) =>
        functions.firebase.updateDoc({ args, pass:{
            fbInit: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.fireInit"
        }})
        }})],
            arrRefStrings: [
        jsvals.j8({pass: {
          propertieValues: "users"
        }}), jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.users.userData.docId"
        }})
        }})],
            arrPathData: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData"
        }})],
            arrFuncs: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "sc.B3.forms.editData"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: ""
        }})
        }}), 
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.emptyField"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "no"
        }})
        }}), async (...args) =>
          functions.funcGroup({ args, pass:{
            arrFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxPayments");
        }
        ]
          }})],
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],
          args
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],
            args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.bottom({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="m13.5 8-4.12 5.5-2.75-2.06M3 12.5H.5V11a4.5 4.5 0 0 1 7.68-3.18m-.93-5.07a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M13.5 8L9.38 13.5L6.63 11.44M3 12.5H0.5V11C0.500782 10.1106 0.765127 9.2413 1.25965 8.50201C1.75417 7.76271 2.45668 7.18655 3.27846 6.84628C4.10024 6.50601 5.00442 6.4169 5.87682 6.59021C6.74921 6.76351 7.55068 7.19146 8.18 7.82M7.25 2.75C7.25 3.99264 6.24264 5 5 5C3.75736 5 2.75 3.99264 2.75 2.75C2.75 1.50736 3.75736 0.5 5 0.5C6.24264 0.5 7.25 1.50736 7.25 2.75Z" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "-12px"
        }})] }}), 
stls.shadows({ pass: {
          shadowColor: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.dark"
        }})
        }})],
          shadowOffset: ['{width: 0, height: 0}'],
          shadowOpacity: [jsvals.j8({pass: {
          propertieValues: "0.2"
        }})],
          shadowRadius: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})],
        }}), 
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 

stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 60
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.borderRadius({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "40px"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={14}     height={14}     fill="red"     viewBox="0 0 14 14"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M.5 7 7 .5 13.5 7m-11 1.5v5h9v-5"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M0.5 7L7 0.5L13.5 7M2.5 8.5V13.5H11.5V8.5" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b4routes");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#CFCDE4"       strokeLinecap="round"       strokeLinejoin="round"       d="M12.5 7.5v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h9.5a1 1 0 0 0 1-1V10M4.34 2 10.01.52a.49.49 0 0 1 .61.36L10.9 2m.1 5.5h2.5a.5.5 0 0 1 .5.5v1.5a.5.5 0 0 1-.5.5H11a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12.5 7.50007V5.50007C12.5 5.23486 12.3946 4.9805 12.2071 4.79297C12.0196 4.60543 11.7652 4.50007 11.5 4.50007H2C1.73478 4.50007 1.48043 4.60543 1.29289 4.79297C1.10536 4.9805 1 5.23486 1 5.50007V12.5001C1 12.7653 1.10536 13.0196 1.29289 13.2072C1.48043 13.3947 1.73478 13.5001 2 13.5001H11.5C11.7652 13.5001 12.0196 13.3947 12.2071 13.2072C12.3946 13.0196 12.5 12.7653 12.5 12.5001V10.0001M4.34 2.00007L10.01 0.520072C10.0737 0.50212 10.1404 0.497264 10.206 0.505797C10.2717 0.514329 10.3349 0.536074 10.3919 0.569717C10.4489 0.603361 10.4985 0.648207 10.5377 0.701548C10.5769 0.754888 10.6049 0.815618 10.62 0.880072L10.9 2.00007M11 7.50007H13.5C13.7761 7.50007 14 7.72393 14 8.00007V9.50007C14 9.77621 13.7761 10.0001 13.5 10.0001H11C10.7239 10.0001 10.5 9.77621 10.5 9.50007V8.00007C10.5 7.72393 10.7239 7.50007 11 7.50007Z" stroke="#CFCDE4" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "15px",

      largura: "35px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxWallet");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.left({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 

stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

            variablePath:[jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],

            expectedVal:[jsvals.j8({pass: {
          propertieValues: "show"
        }})],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "80%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[

stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.secundarySM"
        }})
        }})] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), 
stls.position({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "absolute"
        }})] }}), 
stls.top({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "0px"
        }})] }}), 
stls.padding({ pass: { arrayValue: ['10px'] }}), 
stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "15px"
        }})] }}), stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), stls.backgroundColor({ pass: { arrayValue: [jsvals.varReader({pass: {
          path: jsvals.j8({pass: {
          propertieValues: "all.colors.light"
        }})
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[
        (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 40
        }})
        ] }}), 
stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

          childrenItems: [(...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={8}     height={14}     fill="red"     viewBox="0 0 8 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M7.15.5 1 6.65a.48.48 0 0 0 0 .7l6.15 6.15"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M7.15003 0.5L1.00003 6.65C0.952199 6.69489 0.914076 6.74911 0.888016 6.80931C0.861956 6.8695 0.848511 6.9344 0.848511 7C0.848511 7.0656 0.861956 7.1305 0.888016 7.19069C0.914076 7.25089 0.952199 7.30511 1.00003 7.35L7.15003 13.5" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>, 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 

stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            { color: 'black', fontSize: 12, }
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "START MORFOS"
        }})
          ],

          args,

        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }}), 
stls.justifyContent({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "space-between"
        }})] }}), stls.alignItems({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "center"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "5px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        ],

            args,
          }}/>
        ],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "50px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "20px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[() =><></>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={25}     height={24}     fill="red"     viewBox="0 0 25 24"     {...props}   >     <Path       fill="#555"       fillRule="evenodd"       d="M11.647.065c0 .036-.194.064-.454.064s-.454.028-.454.065c0 .035-.173.064-.389.064-.216 0-.39.029-.39.065 0 .035-.087.064-.194.064-.107 0-.194.03-.194.065s-.117.064-.26.064c-.143 0-.26.03-.26.065s-.087.064-.194.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.072 0-.13.03-.13.065s-.088.064-.195.064c-.107 0-.194.03-.194.065s-.059.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.057.064-.129.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.051.064-.115.064c-.063 0-.157.058-.209.13-.051.07-.139.128-.194.128-.056 0-.144.059-.195.13-.051.07-.134.129-.183.129-.049 0-.171.087-.271.193-.1.107-.214.194-.254.194-.093 0-2.081 1.977-2.081 2.07 0 .04-.088.153-.195.252-.107.1-.194.221-.194.27 0 .049-.059.13-.13.182-.071.051-.13.144-.13.208 0 .063-.029.114-.065.114-.035 0-.065.052-.065.115s-.058.157-.13.208c-.07.051-.129.145-.129.208s-.03.115-.065.115c-.036 0-.065.058-.065.129 0 .07-.029.129-.065.129-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.194 0 .106-.03.193-.065.193-.036 0-.065.087-.065.194 0 .106-.029.193-.065.193-.035 0-.065.145-.065.323 0 .177-.029.322-.064.322-.036 0-.065.146-.065.323 0 .177-.03.322-.065.322-.042 0-.065.624-.065 1.742 0 1.119.023 1.742.065 1.742.036 0 .065.173.065.388 0 .215.029.387.065.387.035 0 .064.116.064.258 0 .142.03.258.065.258.036 0 .065.116.065.258 0 .142.03.258.065.258.036 0 .065.087.065.193 0 .107.03.194.065.194s.065.087.065.193c0 .107.029.194.065.194.035 0 .064.058.064.13 0 .07.03.128.065.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.058.065.13 0 .07.029.128.065.128.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.058.065.13 0 .07.03.128.065.128.036 0 .065.052.065.115s.058.157.13.208c.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.071.051.13.133.13.182 0 .049.087.17.194.27.107.1.195.213.195.252 0 .093 1.988 2.07 2.081 2.07.04 0 .154.087.254.194.1.106.222.194.271.194.05 0 .132.058.183.129.051.07.14.128.195.128.055 0 .143.059.194.13.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.071 0 .13.029.13.064 0 .036.058.065.13.065.07 0 .129.029.129.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.087.065.194.065.107 0 .195.029.195.064 0 .036.117.065.26.065.142 0 .259.029.259.064 0 .036.146.065.324.065.178 0 .325.029.325.064 0 .038.216.065.518.065.303 0 .52.027.52.065 0 .04.41.064 1.102.064.692 0 1.103-.024 1.103-.064 0-.038.216-.065.519-.065.302 0 .518-.027.518-.064 0-.036.146-.065.325-.065.178 0 .324-.03.324-.065s.117-.064.26-.064c.142 0 .26-.03.26-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.088-.064.195-.064c.107 0 .195-.03.195-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.087-.064.195-.064c.107 0 .194-.03.194-.065s.059-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.057-.064.129-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.051-.064.115-.064c.063 0 .157-.058.209-.13.051-.07.139-.129.194-.129.056 0 .144-.058.195-.128.051-.072.134-.13.183-.13.049 0 .171-.087.271-.193.1-.107.214-.194.254-.194.093 0 1.951-1.848 1.951-1.94 0-.04.088-.154.195-.253.107-.1.195-.216.195-.258 0-.043.087-.159.194-.258.107-.1.195-.227.195-.284 0-.057.029-.103.065-.103.035 0 .065-.052.065-.115s.058-.157.13-.208c.07-.051.129-.145.129-.208s.03-.115.065-.115.065-.058.065-.129c0-.07.029-.129.065-.129.035 0 .064-.058.064-.129 0-.07.03-.129.065-.129.036 0 .065-.058.065-.129 0-.07.03-.129.065-.129.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194s.065-.058.065-.129c0-.07.029-.129.064-.129.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.116.065-.258 0-.142.029-.258.065-.258.035 0 .065-.116.065-.258 0-.142.029-.258.064-.258.037 0 .065-.172.065-.387 0-.215.03-.388.065-.388.042 0 .065-.58.065-1.612 0-1.033-.023-1.613-.065-1.613-.036 0-.065-.172-.065-.387 0-.216-.029-.388-.065-.388-.035 0-.064-.145-.064-.322 0-.178-.03-.323-.065-.323-.036 0-.065-.087-.065-.193 0-.107-.03-.194-.065-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258s-.065-.058-.065-.129c0-.071-.029-.129-.064-.129-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.087-.065-.194 0-.106-.029-.193-.065-.193-.035 0-.065-.058-.065-.13 0-.07-.029-.128-.064-.128-.036 0-.065-.052-.065-.115s-.059-.157-.13-.208c-.071-.051-.13-.145-.13-.208s-.029-.115-.065-.115c-.035 0-.064-.051-.064-.114s-.059-.157-.13-.208c-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.133-.13-.182 0-.049-.087-.17-.194-.27-.107-.1-.195-.213-.195-.252 0-.093-1.727-1.812-1.82-1.812-.04 0-.183-.116-.32-.258-.137-.142-.289-.258-.338-.258-.048 0-.13-.059-.181-.13-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.052-.065-.116-.065-.063 0-.157-.058-.209-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.129-.029-.129-.064 0-.036-.087-.065-.194-.065-.108 0-.195-.029-.195-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.064 0-.036-.116-.065-.26-.065-.142 0-.259-.029-.259-.064 0-.036-.116-.065-.26-.065-.142 0-.258-.029-.258-.064 0-.036-.146-.065-.325-.065-.178 0-.324-.029-.324-.064 0-.037-.195-.065-.454-.065-.26 0-.454-.028-.454-.064 0-.04-.411-.065-1.103-.065s-1.103.024-1.103.065Zm1.816 1.032c0 .038.238.064.584.064s.584.027.584.065c0 .035.146.064.324.064.179 0 .325.03.325.065s.117.064.26.064c.142 0 .259.03.259.065s.087.064.194.064c.107 0 .195.03.195.065s.087.064.194.064c.107 0 .195.03.195.065s.058.064.13.064c.071 0 .13.03.13.065s.087.064.194.064c.107 0 .195.03.195.065s.058.065.13.065c.07 0 .13.029.13.064 0 .036.058.065.129.065.071 0 .13.029.13.064 0 .036.052.065.115.065.064 0 .157.058.209.129.051.07.145.129.209.129.063 0 .115.029.115.064 0 .036.052.065.116.065.063 0 .157.058.209.129.051.07.139.129.194.129.056 0 .143.058.195.129.051.07.133.129.18.129.048 0 .23.145.404.322.173.178.347.323.386.323.092 0 .781.686.781.777 0 .039.146.211.324.384.179.173.325.348.325.39 0 .04.087.156.194.255.107.1.195.221.195.27 0 .049.058.13.13.182.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129s.065.058.065.129c0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.029.194.065.194.035 0 .065.058.065.13 0 .07.029.128.064.128.036 0 .065.087.065.194 0 .106.03.193.065.193.036 0 .065.116.065.258 0 .142.03.258.065.258s.065.116.065.258c0 .142.029.258.065.258.037 0 .064.194.064.452s.028.452.065.452c.042 0 .065.494.065 1.354 0 .86-.023 1.355-.065 1.355-.036 0-.065.172-.065.387 0 .216-.028.388-.064.388-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.116-.065.258 0 .142-.03.258-.065.258-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.064.087-.064.194 0 .106-.03.193-.065.193-.036 0-.065.058-.065.129 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.029.13-.064.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13-.036 0-.065.057-.065.128 0 .071-.03.13-.065.13s-.065.051-.065.114-.058.157-.13.208c-.07.051-.13.133-.13.182 0 .049-.087.17-.194.27-.107.099-.194.215-.194.256 0 .042-.117.188-.26.324-.142.137-.26.28-.26.319 0 .1-.822.907-.924.907-.046 0-.126.058-.178.13-.131.18-.195.16-.195-.065 0-.107-.029-.194-.064-.194-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193s-.065-.087-.065-.194c0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.059-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.052-.065-.115 0-.064-.058-.157-.13-.208-.07-.051-.129-.133-.129-.18 0-.049-.117-.2-.26-.336-.142-.137-.259-.28-.259-.32 0-.094-.428-.519-.523-.519-.04 0-.155-.087-.255-.194-.1-.106-.229-.193-.286-.193-.057 0-.104-.03-.104-.065s-.058-.064-.13-.064c-.07 0-.129-.03-.129-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.081.065-.18.065a.355.355 0 0 0-.274.129c-.051.07-.145.129-.209.129-.063 0-.115.029-.115.064 0 .036-.088.065-.195.065-.107 0-.194.03-.194.064 0 .04-.282.065-.714.065s-.713-.025-.713-.064c0-.036-.088-.065-.195-.065-.107 0-.195-.029-.195-.065 0-.035-.052-.064-.115-.064-.064 0-.158-.058-.209-.129a.355.355 0 0 0-.274-.13c-.099 0-.18-.028-.18-.064 0-.035-.088-.064-.195-.064-.107 0-.194-.03-.194-.065 0-.038-.238-.064-.584-.064s-.584.026-.584.064c0 .036-.087.065-.194.065-.107 0-.195.029-.195.064 0 .036-.058.065-.13.065-.071 0-.13.029-.13.064 0 .036-.046.065-.103.065-.057 0-.186.087-.286.193-.1.107-.215.194-.255.194-.095 0-.523.425-.523.52 0 .039-.117.182-.26.319-.142.136-.259.287-.259.335 0 .049-.058.13-.13.18-.071.052-.13.146-.13.209s-.029.114-.064.114c-.036 0-.065.059-.065.13 0 .07-.03.128-.065.128-.036 0-.065.059-.065.13 0 .07-.03.129-.065.129s-.065.058-.065.129c0 .07-.029.129-.064.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.116-.065.258 0 .142-.029.258-.065.258-.035 0-.065.087-.065.194 0 .106-.029.193-.064.193a.065.065 0 0 1-.065-.064c0-.036-.045-.065-.099-.065-.11 0-1.069-.928-1.069-1.035 0-.039-.146-.211-.324-.384-.179-.173-.324-.354-.324-.401 0-.048-.059-.129-.13-.18-.072-.051-.13-.138-.13-.194 0-.055-.058-.142-.13-.193-.071-.051-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.051-.065-.114 0-.064-.058-.157-.13-.208a.352.352 0 0 1-.13-.273c0-.098-.029-.179-.064-.179-.036 0-.065-.058-.065-.129 0-.07-.03-.129-.065-.129-.036 0-.065-.058-.065-.129 0-.07-.029-.129-.065-.129-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.087-.065-.194 0-.106-.03-.193-.065-.193-.036 0-.065-.146-.065-.323 0-.177-.029-.322-.065-.322-.036 0-.064-.173-.064-.388 0-.215-.03-.387-.065-.387-.042 0-.065-.516-.065-1.419s.023-1.42.065-1.42c.036 0 .065-.171.065-.386s.028-.388.064-.388c.036 0 .065-.145.065-.322 0-.178.03-.323.065-.323.036 0 .065-.087.065-.193 0-.107.03-.194.065-.194.036 0 .065-.087.065-.193 0-.107.029-.194.065-.194.035 0 .064-.087.064-.193 0-.107.03-.194.065-.194.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.08.065-.178c0-.106.053-.218.13-.273.07-.05.13-.144.13-.208 0-.063.028-.114.064-.114.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128s.065-.052.065-.115.058-.157.13-.208c.07-.051.129-.133.129-.182 0-.049.088-.17.195-.27.107-.099.194-.215.194-.256 0-.042.117-.188.26-.324.142-.137.26-.28.26-.319 0-.092.948-1.036 1.041-1.036.04 0 .183-.116.32-.258.137-.142.29-.258.338-.258.048 0 .13-.058.181-.13.052-.07.14-.128.195-.128.055 0 .143-.058.194-.13.052-.07.14-.128.195-.128.056 0 .143-.058.195-.13.051-.07.145-.128.209-.128.063 0 .115-.03.115-.065s.058-.064.13-.064c.071 0 .13-.03.13-.065s.058-.064.13-.064c.07 0 .129-.03.129-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.065.194-.065c.107 0 .195-.029.195-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.088-.065.195-.065.107 0 .194-.029.194-.064 0-.036.117-.065.26-.065.143 0 .26-.029.26-.064 0-.036.145-.065.324-.065.178 0 .324-.029.324-.064 0-.038.238-.065.584-.065s.584-.026.584-.064c0-.04.28-.065.713-.065.432 0 .713.026.713.065Zm-1.556 2.58c0 .036-.117.065-.26.065-.142 0-.26.029-.26.064 0 .036-.087.065-.194.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.065 0 .035-.059.064-.13.064-.072 0-.13.03-.13.065s-.052.064-.115.064c-.064 0-.158.058-.21.13-.05.07-.13.128-.177.128-.109 0-1.314 1.199-1.314 1.308 0 .045-.059.125-.13.176-.071.051-.13.145-.13.208s-.029.115-.065.115c-.035 0-.064.058-.064.129 0 .07-.03.129-.065.129-.036 0-.065.087-.065.193 0 .107-.03.194-.065.194-.036 0-.065.087-.065.193 0 .107-.029.194-.065.194-.035 0-.065.145-.065.322 0 .178-.029.323-.064.323-.04 0-.065.258-.065.645s.026.645.065.645c.036 0 .064.172.064.387 0 .215.03.388.065.388.036 0 .065.116.065.258 0 .141.03.258.065.258.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.087.065.193 0 .107.029.194.064.194.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.058.065.129 0 .07.029.129.065.129.035 0 .065.058.065.129 0 .071.029.13.064.13.036 0 .065.046.065.102 0 .057.088.185.195.284.107.1.194.213.194.253 0 .1 1.213 1.296 1.315 1.296.046 0 .126.058.177.129.052.07.146.129.21.129.063 0 .115.029.115.064 0 .036.058.065.13.065.07 0 .13.029.13.064 0 .036.087.065.194.065.107 0 .194.029.194.064 0 .036.146.065.325.065.178 0 .324.029.324.064 0 .037.195.065.454.065.26 0 .454-.028.454-.065 0-.035.146-.064.324-.064.179 0 .325-.03.325-.065s.058-.064.13-.064c.07 0 .13-.03.13-.065s.087-.064.194-.064c.107 0 .194-.03.194-.065s.052-.064.116-.064c.063 0 .157-.059.209-.13.051-.07.13-.128.177-.128.11 0 1.315-1.2 1.315-1.308 0-.046.058-.125.13-.176.07-.052.129-.139.129-.194 0-.055.058-.142.13-.193.071-.052.13-.145.13-.208S16.866 12 16.9 12c.036 0 .065-.058.065-.129 0-.071.03-.13.065-.13.036 0 .065-.057.065-.128 0-.071.03-.13.065-.13s.065-.057.065-.128c0-.071.029-.13.065-.13.035 0 .064-.086.064-.193 0-.106.03-.193.065-.193.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.088.065-.194 0-.106.03-.193.065-.193.036 0 .065-.173.065-.388 0-.215.028-.387.064-.387.038 0 .065-.215.065-.516 0-.3-.027-.516-.064-.516-.037 0-.065-.172-.065-.387 0-.215-.03-.387-.065-.387-.036 0-.065-.116-.065-.258 0-.142-.03-.258-.065-.258-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128s-.065-.081-.065-.18a.352.352 0 0 0-.13-.272c-.07-.051-.13-.138-.13-.193 0-.056-.057-.143-.129-.194-.071-.051-.13-.13-.13-.176 0-.11-1.075-1.179-1.184-1.179-.046 0-.126-.058-.178-.129-.051-.07-.145-.129-.209-.129-.063 0-.115-.029-.115-.064 0-.036-.058-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.087-.065-.194-.065-.107 0-.195-.029-.195-.065 0-.035-.087-.064-.194-.064-.107 0-.195-.03-.195-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065 0-.04-.324-.064-.843-.064-.519 0-.843.025-.843.064Zm1.427 1.033c0 .035.146.064.324.064.178 0 .324.03.324.065s.059.064.13.064c.072 0 .13.03.13.065s.081.064.18.064c.106 0 .219.054.274.13.051.07.134.128.183.128.049 0 .171.087.271.194.1.106.215.193.256.193.096 0 .393.295.393.39 0 .042.087.156.194.256.107.099.195.227.195.284 0 .056.029.103.065.103.035 0 .065.058.065.129 0 .07.029.129.064.129.036 0 .065.058.065.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.037 0 .065.193.065.452 0 .258.028.451.065.451.035 0 .065.087.065.194 0 .106-.03.193-.065.193-.037 0-.065.194-.065.452s-.028.451-.065.451c-.036 0-.065.117-.065.259 0 .142-.03.258-.065.258s-.065.058-.065.129c0 .07-.029.129-.065.129-.035 0-.064.087-.064.193 0 .107-.03.194-.065.194-.036 0-.065.058-.065.129 0 .07-.03.129-.065.129-.036 0-.065.051-.065.115 0 .063-.058.156-.13.207-.071.052-.13.145-.13.208s-.028.115-.064.115c-.036 0-.065.044-.065.098 0 .127-1.33 1.45-1.459 1.45-.054 0-.098.03-.098.065s-.058.064-.13.064c-.07 0-.13.03-.13.065s-.058.064-.129.064c-.071 0-.13.03-.13.065s-.146.064-.324.064c-.178 0-.324.03-.324.065s-.088.064-.195.064c-.107 0-.195-.029-.195-.064 0-.036-.146-.065-.324-.065-.178 0-.324-.029-.324-.064 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.045-.065-.101-.065-.057 0-.215-.116-.352-.258-.137-.142-.283-.258-.324-.258-.096 0-.26-.162-.26-.258 0-.041-.117-.186-.26-.322-.142-.137-.259-.288-.259-.336 0-.048-.058-.13-.13-.18-.071-.052-.13-.145-.13-.208s-.029-.115-.064-.115c-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.058-.065-.13 0-.07-.029-.128-.065-.128-.035 0-.065-.087-.065-.194 0-.106-.029-.193-.064-.193-.036 0-.065-.058-.065-.13 0-.07-.03-.128-.065-.128-.036 0-.065-.117-.065-.258 0-.142-.03-.259-.065-.259-.037 0-.065-.193-.065-.451s-.028-.452-.065-.452c-.035 0-.064-.145-.064-.322 0-.178.029-.323.064-.323.036 0 .065-.145.065-.323 0-.177.03-.322.065-.322.036 0 .065-.087.065-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.029-.128.065-.128.035 0 .064-.058.064-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.059-.157.13-.208c.071-.051.13-.13.13-.177 0-.11.555-.662.665-.662.046 0 .126-.058.178-.129.051-.07.139-.129.195-.129.055 0 .143-.058.194-.129a.355.355 0 0 1 .274-.129c.099 0 .18-.029.18-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.146-.065.324-.065.178 0 .324-.029.324-.064 0-.039.238-.065.584-.065s.584.026.584.065ZM10.35 16.58c0 .036.058.065.13.065.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.058.064.13.064c.071 0 .13.03.13.065s.058.064.13.064c.07 0 .129.03.129.065s.087.064.194.064c.107 0 .195.03.195.065 0 .04.368.064.973.064s.973-.024.973-.064c0-.036.087-.065.195-.065.107 0 .194-.029.194-.064 0-.036.059-.065.13-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .13-.029.13-.064 0-.036.058-.065.129-.065.071 0 .13-.029.13-.064 0-.036.058-.065.13-.065.07 0 .129-.029.129-.064 0-.037.195-.065.454-.065.26 0 .454.028.454.065 0 .035.058.064.13.064.071 0 .13.03.13.065s.044.064.098.064c.12 0 1.07.932 1.07 1.05 0 .045.058.125.129.176.071.051.13.145.13.208s.029.115.064.115c.036 0 .065.051.065.114s.059.157.13.208c.076.055.13.167.13.273 0 .098.029.179.065.179.035 0 .064.058.064.129 0 .07.03.129.065.129.036 0 .065.087.065.193 0 .107.03.194.065.194.036 0 .065.116.065.258 0 .142.03.258.065.258.038 0 .065.215.065.516 0 .452-.015.516-.116.516-.063 0-.157.058-.209.13-.051.07-.145.128-.209.128-.063 0-.115.03-.115.065s-.058.064-.13.064c-.071 0-.13.03-.13.065s-.058.064-.13.064c-.07 0-.129.03-.129.065 0 .036-.058.065-.13.065-.07 0-.13.029-.13.064s-.058.064-.13.064c-.07 0-.129.03-.129.065s-.087.064-.194.064c-.107 0-.195.03-.195.065 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.088.065-.195.065-.107 0-.194.029-.194.064 0 .036-.117.065-.26.065-.143 0-.26.029-.26.064 0 .036-.145.065-.324.065-.178 0-.324.029-.324.064 0 .037-.194.065-.454.065s-.454.027-.454.064c0 .04-.368.065-.973.065s-.973-.025-.973-.065c0-.037-.195-.064-.454-.064-.26 0-.454-.028-.454-.065 0-.035-.146-.064-.324-.064-.179 0-.325-.03-.325-.065s-.117-.064-.26-.064c-.142 0-.259-.03-.259-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.087-.064-.194-.064c-.107 0-.195-.03-.195-.065s-.088-.064-.195-.064c-.107 0-.194-.03-.194-.065 0-.036-.059-.065-.13-.065-.071 0-.13-.029-.13-.064s-.058-.064-.13-.064c-.07 0-.13-.03-.13-.065s-.058-.064-.129-.064c-.071 0-.13-.03-.13-.065 0-.036-.058-.065-.13-.065-.07 0-.13-.029-.13-.064 0-.036-.051-.065-.114-.065-.064 0-.158-.058-.21-.129-.05-.07-.145-.129-.208-.129-.101 0-.116-.064-.116-.516 0-.3.027-.516.065-.516.036 0 .065-.116.065-.258 0-.142.03-.258.065-.258.036 0 .065-.087.065-.194 0-.106.029-.193.065-.193.035 0 .064-.087.064-.194 0-.106.03-.193.065-.193.036 0 .065-.058.065-.13 0-.07.03-.128.065-.128.036 0 .065-.052.065-.115s.058-.157.13-.208c.071-.051.13-.138.13-.194 0-.055.058-.142.13-.193.07-.051.129-.13.129-.177 0-.117.95-1.049 1.07-1.049.053 0 .097-.029.097-.064 0-.036.059-.065.13-.065.072 0 .13-.029.13-.064 0-.037.194-.065.454-.065s.454.028.454.065Z"       clipRule="evenodd"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11.6473 0.0645161C11.6473 0.101355 11.4527 0.129032 11.1932 0.129032C10.9338 0.129032 10.7392 0.15671 10.7392 0.193548C10.7392 0.229419 10.5662 0.258065 10.35 0.258065C10.1338 0.258065 9.96081 0.28671 9.96081 0.322581C9.96081 0.358065 9.87324 0.387097 9.76622 0.387097C9.65919 0.387097 9.57162 0.416129 9.57162 0.451613C9.57162 0.487097 9.45487 0.516129 9.31216 0.516129C9.16946 0.516129 9.0527 0.545161 9.0527 0.580645C9.0527 0.616129 8.96514 0.645161 8.85811 0.645161C8.75108 0.645161 8.66351 0.674194 8.66351 0.709677C8.66351 0.745161 8.60513 0.774194 8.53378 0.774194C8.46243 0.774194 8.40405 0.803226 8.40405 0.83871C8.40405 0.874194 8.31649 0.903226 8.20946 0.903226C8.10243 0.903226 8.01486 0.932258 8.01486 0.967742C8.01486 1.00323 7.95649 1.03226 7.88513 1.03226C7.81378 1.03226 7.75541 1.06129 7.75541 1.09677C7.75541 1.13226 7.69703 1.16129 7.62568 1.16129C7.55432 1.16129 7.49595 1.19032 7.49595 1.22581C7.49595 1.26129 7.43757 1.29032 7.36622 1.29032C7.29486 1.29032 7.23649 1.31935 7.23649 1.35484C7.23649 1.39032 7.17811 1.41935 7.10676 1.41935C7.03541 1.41935 6.97703 1.44839 6.97703 1.48387C6.97703 1.51935 6.91865 1.54839 6.8473 1.54839C6.77595 1.54839 6.71757 1.57742 6.71757 1.6129C6.71757 1.64839 6.66561 1.67742 6.60217 1.67742C6.53867 1.67742 6.44468 1.73548 6.39324 1.80645C6.34181 1.87742 6.25424 1.93548 6.19865 1.93548C6.14306 1.93548 6.05549 1.99355 6.00405 2.06452C5.95262 2.13548 5.8703 2.19355 5.82114 2.19355C5.77203 2.19355 5.64996 2.28065 5.55 2.3871C5.45004 2.49355 5.33595 2.58065 5.29644 2.58065C5.20265 2.58065 3.21486 4.55774 3.21486 4.65103C3.21486 4.69032 3.1273 4.80381 3.02027 4.90323C2.91324 5.00265 2.82568 5.12406 2.82568 5.1729C2.82568 5.22181 2.7673 5.30368 2.69595 5.35484C2.62459 5.406 2.56622 5.49948 2.56622 5.56264C2.56622 5.62574 2.53703 5.67742 2.50135 5.67742C2.46568 5.67742 2.43649 5.7291 2.43649 5.79219C2.43649 5.85535 2.37811 5.94884 2.30676 6C2.23541 6.05116 2.17703 6.14465 2.17703 6.20781C2.17703 6.2709 2.14784 6.32258 2.11216 6.32258C2.07649 6.32258 2.0473 6.38064 2.0473 6.45161C2.0473 6.52258 2.01811 6.58065 1.98243 6.58065C1.94676 6.58065 1.91757 6.63871 1.91757 6.70968C1.91757 6.78065 1.88838 6.83871 1.8527 6.83871C1.81703 6.83871 1.78784 6.89677 1.78784 6.96774C1.78784 7.03871 1.75865 7.09677 1.72297 7.09677C1.6873 7.09677 1.65811 7.18387 1.65811 7.29032C1.65811 7.39677 1.62892 7.48387 1.59324 7.48387C1.55757 7.48387 1.52838 7.54194 1.52838 7.6129C1.52838 7.68387 1.49919 7.74193 1.46351 7.74193C1.42784 7.74193 1.39865 7.82903 1.39865 7.93548C1.39865 8.04194 1.36946 8.12903 1.33378 8.12903C1.29811 8.12903 1.26892 8.21613 1.26892 8.32258C1.26892 8.42903 1.23973 8.51613 1.20405 8.51613C1.16838 8.51613 1.13919 8.60323 1.13919 8.70968C1.13919 8.81613 1.11 8.90323 1.07432 8.90323C1.03865 8.90323 1.00946 9.04839 1.00946 9.22581C1.00946 9.40323 0.98027 9.54839 0.944595 9.54839C0.908919 9.54839 0.87973 9.69355 0.87973 9.87097C0.87973 10.0484 0.850541 10.1935 0.814865 10.1935C0.773222 10.1935 0.75 10.8172 0.75 11.9355C0.75 13.0537 0.773222 13.6774 0.814865 13.6774C0.85093 13.6774 0.87973 13.8495 0.87973 14.0645C0.87973 14.2795 0.90853 14.4516 0.944595 14.4516C0.98027 14.4516 1.00946 14.5677 1.00946 14.7097C1.00946 14.8516 1.03865 14.9677 1.07432 14.9677C1.11 14.9677 1.13919 15.0839 1.13919 15.2258C1.13919 15.3677 1.16838 15.4839 1.20405 15.4839C1.23973 15.4839 1.26892 15.571 1.26892 15.6774C1.26892 15.7839 1.29811 15.871 1.33378 15.871C1.36946 15.871 1.39865 15.9581 1.39865 16.0645C1.39865 16.171 1.42784 16.2581 1.46351 16.2581C1.49919 16.2581 1.52838 16.3161 1.52838 16.3871C1.52838 16.4581 1.55757 16.5161 1.59324 16.5161C1.62892 16.5161 1.65811 16.6032 1.65811 16.7097C1.65811 16.8161 1.6873 16.9032 1.72297 16.9032C1.75865 16.9032 1.78784 16.9613 1.78784 17.0323C1.78784 17.1032 1.81703 17.1613 1.8527 17.1613C1.88838 17.1613 1.91757 17.2194 1.91757 17.2903C1.91757 17.3613 1.94676 17.4194 1.98243 17.4194C2.01811 17.4194 2.0473 17.4774 2.0473 17.5484C2.0473 17.6194 2.07649 17.6774 2.11216 17.6774C2.14784 17.6774 2.17703 17.7291 2.17703 17.7922C2.17703 17.8554 2.23541 17.9488 2.30676 18C2.37811 18.0512 2.43649 18.1446 2.43649 18.2078C2.43649 18.2709 2.46568 18.3226 2.50135 18.3226C2.53703 18.3226 2.56622 18.3743 2.56622 18.4374C2.56622 18.5005 2.62459 18.594 2.69595 18.6452C2.7673 18.6963 2.82568 18.7782 2.82568 18.8271C2.82568 18.8759 2.91324 18.9974 3.02027 19.0968C3.1273 19.1962 3.21486 19.3097 3.21486 19.349C3.21486 19.4423 5.20265 21.4194 5.29644 21.4194C5.33595 21.4194 5.45004 21.5065 5.55 21.6129C5.64996 21.7194 5.77203 21.8065 5.82114 21.8065C5.8703 21.8065 5.95262 21.8645 6.00405 21.9355C6.05549 22.0065 6.14306 22.0645 6.19865 22.0645C6.25424 22.0645 6.34181 22.1226 6.39324 22.1935C6.44468 22.2645 6.53867 22.3226 6.60217 22.3226C6.66561 22.3226 6.71757 22.3516 6.71757 22.3871C6.71757 22.4226 6.77595 22.4516 6.8473 22.4516C6.91865 22.4516 6.97703 22.4806 6.97703 22.5161C6.97703 22.5516 7.03541 22.5806 7.10676 22.5806C7.17811 22.5806 7.23649 22.6097 7.23649 22.6452C7.23649 22.6806 7.29486 22.7097 7.36622 22.7097C7.43757 22.7097 7.49595 22.7387 7.49595 22.7742C7.49595 22.8097 7.55432 22.8387 7.62568 22.8387C7.69703 22.8387 7.75541 22.8677 7.75541 22.9032C7.75541 22.9387 7.81378 22.9677 7.88513 22.9677C7.95649 22.9677 8.01486 22.9968 8.01486 23.0323C8.01486 23.0677 8.07324 23.0968 8.14459 23.0968C8.21595 23.0968 8.27432 23.1258 8.27432 23.1613C8.27432 23.1968 8.36189 23.2258 8.46892 23.2258C8.57595 23.2258 8.66351 23.2548 8.66351 23.2903C8.66351 23.3258 8.75108 23.3548 8.85811 23.3548C8.96514 23.3548 9.0527 23.3839 9.0527 23.4194C9.0527 23.4548 9.14027 23.4839 9.2473 23.4839C9.35432 23.4839 9.44189 23.5129 9.44189 23.5484C9.44189 23.5839 9.55865 23.6129 9.70135 23.6129C9.84405 23.6129 9.96081 23.6419 9.96081 23.6774C9.96081 23.7129 10.1068 23.7419 10.2851 23.7419C10.4635 23.7419 10.6095 23.771 10.6095 23.8065C10.6095 23.8441 10.8257 23.871 11.1284 23.871C11.4311 23.871 11.6473 23.8979 11.6473 23.9355C11.6473 23.9759 12.0581 24 12.75 24C13.4419 24 13.8527 23.9759 13.8527 23.9355C13.8527 23.8979 14.0689 23.871 14.3716 23.871C14.6743 23.871 14.8905 23.8441 14.8905 23.8065C14.8905 23.771 15.0365 23.7419 15.2149 23.7419C15.3932 23.7419 15.5392 23.7129 15.5392 23.6774C15.5392 23.6419 15.6559 23.6129 15.7986 23.6129C15.9414 23.6129 16.0581 23.5839 16.0581 23.5484C16.0581 23.5129 16.1457 23.4839 16.2527 23.4839C16.3597 23.4839 16.4473 23.4548 16.4473 23.4194C16.4473 23.3839 16.5349 23.3548 16.6419 23.3548C16.7489 23.3548 16.8365 23.3258 16.8365 23.2903C16.8365 23.2548 16.8949 23.2258 16.9662 23.2258C17.0376 23.2258 17.0959 23.1968 17.0959 23.1613C17.0959 23.1258 17.1835 23.0968 17.2905 23.0968C17.3976 23.0968 17.4851 23.0677 17.4851 23.0323C17.4851 22.9968 17.5435 22.9677 17.6149 22.9677C17.6862 22.9677 17.7446 22.9387 17.7446 22.9032C17.7446 22.8677 17.803 22.8387 17.8743 22.8387C17.9457 22.8387 18.0041 22.8097 18.0041 22.7742C18.0041 22.7387 18.0624 22.7097 18.1338 22.7097C18.2051 22.7097 18.2635 22.6806 18.2635 22.6452C18.2635 22.6097 18.3219 22.5806 18.3932 22.5806C18.4646 22.5806 18.523 22.5516 18.523 22.5161C18.523 22.4806 18.5814 22.4516 18.6527 22.4516C18.7241 22.4516 18.7824 22.4226 18.7824 22.3871C18.7824 22.3516 18.8344 22.3226 18.8978 22.3226C18.9613 22.3226 19.0553 22.2645 19.1068 22.1935C19.1582 22.1226 19.2458 22.0645 19.3014 22.0645C19.3569 22.0645 19.4445 22.0065 19.4959 21.9355C19.5474 21.8645 19.6297 21.8065 19.6789 21.8065C19.728 21.8065 19.85 21.7194 19.95 21.6129C20.05 21.5065 20.1641 21.4194 20.2036 21.4194C20.2974 21.4194 22.1554 19.5714 22.1554 19.4781C22.1554 19.4388 22.243 19.3252 22.35 19.2258C22.457 19.1264 22.5446 19.0103 22.5446 18.9677C22.5446 18.9252 22.6322 18.8091 22.7392 18.7097C22.8462 18.6103 22.9338 18.4825 22.9338 18.4257C22.9338 18.369 22.963 18.3226 22.9986 18.3226C23.0343 18.3226 23.0635 18.2709 23.0635 18.2078C23.0635 18.1446 23.1219 18.0512 23.1932 18C23.2646 17.9488 23.323 17.8554 23.323 17.7922C23.323 17.7291 23.3522 17.6774 23.3878 17.6774C23.4235 17.6774 23.4527 17.6194 23.4527 17.5484C23.4527 17.4774 23.4819 17.4194 23.5176 17.4194C23.5532 17.4194 23.5824 17.3613 23.5824 17.2903C23.5824 17.2194 23.6116 17.1613 23.6473 17.1613C23.683 17.1613 23.7122 17.1032 23.7122 17.0323C23.7122 16.9613 23.7414 16.9032 23.777 16.9032C23.8127 16.9032 23.8419 16.8161 23.8419 16.7097C23.8419 16.6032 23.8711 16.5161 23.9068 16.5161C23.9424 16.5161 23.9716 16.4581 23.9716 16.3871C23.9716 16.3161 24.0008 16.2581 24.0365 16.2581C24.0722 16.2581 24.1014 16.171 24.1014 16.0645C24.1014 15.9581 24.1305 15.871 24.1662 15.871C24.2019 15.871 24.2311 15.7839 24.2311 15.6774C24.2311 15.571 24.2603 15.4839 24.2959 15.4839C24.3316 15.4839 24.3608 15.3677 24.3608 15.2258C24.3608 15.0839 24.39 14.9677 24.4257 14.9677C24.4614 14.9677 24.4905 14.8516 24.4905 14.7097C24.4905 14.5677 24.5197 14.4516 24.5554 14.4516C24.5915 14.4516 24.6203 14.2795 24.6203 14.0645C24.6203 13.8495 24.6491 13.6774 24.6851 13.6774C24.7266 13.6774 24.75 13.0968 24.75 12.0645C24.75 11.0323 24.7266 10.4516 24.6851 10.4516C24.6491 10.4516 24.6203 10.2795 24.6203 10.0645C24.6203 9.84948 24.5915 9.67742 24.5554 9.67742C24.5197 9.67742 24.4905 9.53226 24.4905 9.35484C24.4905 9.17742 24.4614 9.03226 24.4257 9.03226C24.39 9.03226 24.3608 8.94516 24.3608 8.83871C24.3608 8.73226 24.3316 8.64516 24.2959 8.64516C24.2603 8.64516 24.2311 8.52903 24.2311 8.3871C24.2311 8.24516 24.2019 8.12903 24.1662 8.12903C24.1305 8.12903 24.1014 8.07097 24.1014 8C24.1014 7.92903 24.0722 7.87097 24.0365 7.87097C24.0008 7.87097 23.9716 7.78387 23.9716 7.67742C23.9716 7.57097 23.9424 7.48387 23.9068 7.48387C23.8711 7.48387 23.8419 7.42581 23.8419 7.35484C23.8419 7.28387 23.8127 7.22581 23.777 7.22581C23.7414 7.22581 23.7122 7.13871 23.7122 7.03226C23.7122 6.92581 23.683 6.83871 23.6473 6.83871C23.6116 6.83871 23.5824 6.78065 23.5824 6.70968C23.5824 6.63871 23.5532 6.58065 23.5176 6.58065C23.4819 6.58065 23.4527 6.52897 23.4527 6.46587C23.4527 6.40271 23.3943 6.30923 23.323 6.25806C23.2516 6.2069 23.1932 6.11342 23.1932 6.05026C23.1932 5.98716 23.1641 5.93548 23.1284 5.93548C23.0927 5.93548 23.0635 5.88381 23.0635 5.82071C23.0635 5.75755 23.0051 5.66406 22.9338 5.6129C22.8624 5.56174 22.8041 5.47465 22.8041 5.41935C22.8041 5.36406 22.7457 5.27697 22.6743 5.22581C22.603 5.17464 22.5446 5.09277 22.5446 5.04387C22.5446 4.99503 22.457 4.87361 22.35 4.77419C22.243 4.67477 22.1554 4.56123 22.1554 4.52193C22.1554 4.42942 20.4277 2.70968 20.3347 2.70968C20.2959 2.70968 20.152 2.59355 20.0149 2.45161C19.8777 2.30968 19.726 2.19355 19.6775 2.19355C19.629 2.19355 19.5474 2.13548 19.4959 2.06452C19.4445 1.99355 19.3505 1.93548 19.287 1.93548C19.2236 1.93548 19.1716 1.90645 19.1716 1.87097C19.1716 1.83548 19.1197 1.80645 19.0562 1.80645C18.9927 1.80645 18.8987 1.74839 18.8473 1.67742C18.7959 1.60645 18.7019 1.54839 18.6384 1.54839C18.5749 1.54839 18.523 1.51935 18.523 1.48387C18.523 1.44839 18.4646 1.41935 18.3932 1.41935C18.3219 1.41935 18.2635 1.39032 18.2635 1.35484C18.2635 1.31935 18.2051 1.29032 18.1338 1.29032C18.0624 1.29032 18.0041 1.26129 18.0041 1.22581C18.0041 1.19032 17.9457 1.16129 17.8743 1.16129C17.803 1.16129 17.7446 1.13226 17.7446 1.09677C17.7446 1.06129 17.6862 1.03226 17.6149 1.03226C17.5435 1.03226 17.4851 1.00323 17.4851 0.967742C17.4851 0.932258 17.3976 0.903226 17.2905 0.903226C17.1835 0.903226 17.0959 0.874194 17.0959 0.83871C17.0959 0.803226 17.0376 0.774194 16.9662 0.774194C16.8949 0.774194 16.8365 0.745161 16.8365 0.709677C16.8365 0.674194 16.7489 0.645161 16.6419 0.645161C16.5349 0.645161 16.4473 0.616129 16.4473 0.580645C16.4473 0.545161 16.3305 0.516129 16.1878 0.516129C16.0451 0.516129 15.9284 0.487097 15.9284 0.451613C15.9284 0.416129 15.8116 0.387097 15.6689 0.387097C15.5262 0.387097 15.4095 0.358065 15.4095 0.322581C15.4095 0.287097 15.2635 0.258065 15.0851 0.258065C14.9068 0.258065 14.7608 0.229032 14.7608 0.193548C14.7608 0.15671 14.5662 0.129032 14.3068 0.129032C14.0473 0.129032 13.8527 0.101355 13.8527 0.0645161C13.8527 0.0240645 13.4419 0 12.75 0C12.0581 0 11.6473 0.0240645 11.6473 0.0645161ZM13.4635 1.09677C13.4635 1.13503 13.7014 1.16129 14.0473 1.16129C14.3932 1.16129 14.6311 1.18755 14.6311 1.22581C14.6311 1.26129 14.777 1.29032 14.9554 1.29032C15.1338 1.29032 15.2797 1.31935 15.2797 1.35484C15.2797 1.39032 15.3965 1.41935 15.5392 1.41935C15.6819 1.41935 15.7986 1.44839 15.7986 1.48387C15.7986 1.51935 15.8862 1.54839 15.9932 1.54839C16.1003 1.54839 16.1878 1.57742 16.1878 1.6129C16.1878 1.64839 16.2754 1.67742 16.3824 1.67742C16.4895 1.67742 16.577 1.70645 16.577 1.74194C16.577 1.77742 16.6354 1.80645 16.7068 1.80645C16.7781 1.80645 16.8365 1.83548 16.8365 1.87097C16.8365 1.90645 16.9241 1.93548 17.0311 1.93548C17.1381 1.93548 17.2257 1.96452 17.2257 2C17.2257 2.03548 17.2841 2.06452 17.3554 2.06452C17.4268 2.06452 17.4851 2.09355 17.4851 2.12903C17.4851 2.16452 17.5435 2.19355 17.6149 2.19355C17.6862 2.19355 17.7446 2.22258 17.7446 2.25806C17.7446 2.29355 17.7966 2.32258 17.86 2.32258C17.9235 2.32258 18.0175 2.38065 18.0689 2.45161C18.1204 2.52258 18.2143 2.58065 18.2778 2.58065C18.3413 2.58065 18.3932 2.60968 18.3932 2.64516C18.3932 2.68065 18.4452 2.70968 18.5086 2.70968C18.5721 2.70968 18.6661 2.76774 18.7176 2.83871C18.769 2.90968 18.8566 2.96774 18.9122 2.96774C18.9678 2.96774 19.0553 3.02581 19.1068 3.09677C19.1582 3.16774 19.2395 3.22581 19.2875 3.22581C19.3354 3.22581 19.5168 3.37097 19.6905 3.54839C19.8643 3.72581 20.0382 3.87097 20.0769 3.87097C20.1688 3.87097 20.8581 4.55658 20.8581 4.64794C20.8581 4.68652 21.0041 4.85942 21.1824 5.03226C21.3608 5.2051 21.5068 5.38026 21.5068 5.42155C21.5068 5.46284 21.5943 5.578 21.7014 5.67742C21.8084 5.77684 21.8959 5.89826 21.8959 5.9471C21.8959 5.996 21.9543 6.07787 22.0257 6.12903C22.097 6.18019 22.1554 6.27368 22.1554 6.33684C22.1554 6.39994 22.1846 6.45161 22.2203 6.45161C22.2559 6.45161 22.2851 6.50968 22.2851 6.58065C22.2851 6.65161 22.3143 6.70968 22.35 6.70968C22.3857 6.70968 22.4149 6.76774 22.4149 6.83871C22.4149 6.90968 22.4441 6.96774 22.4797 6.96774C22.5154 6.96774 22.5446 7.02581 22.5446 7.09677C22.5446 7.16774 22.5738 7.22581 22.6095 7.22581C22.6451 7.22581 22.6743 7.28387 22.6743 7.35484C22.6743 7.42581 22.7035 7.48387 22.7392 7.48387C22.7749 7.48387 22.8041 7.54194 22.8041 7.6129C22.8041 7.68387 22.8332 7.74193 22.8689 7.74193C22.9046 7.74193 22.9338 7.82903 22.9338 7.93548C22.9338 8.04194 22.963 8.12903 22.9986 8.12903C23.0343 8.12903 23.0635 8.1871 23.0635 8.25806C23.0635 8.32903 23.0927 8.3871 23.1284 8.3871C23.1641 8.3871 23.1932 8.47419 23.1932 8.58064C23.1932 8.6871 23.2224 8.77419 23.2581 8.77419C23.2938 8.77419 23.323 8.89032 23.323 9.03226C23.323 9.17419 23.3522 9.29032 23.3878 9.29032C23.4235 9.29032 23.4527 9.40645 23.4527 9.54839C23.4527 9.69032 23.4819 9.80645 23.5176 9.80645C23.5546 9.80645 23.5824 10 23.5824 10.2581C23.5824 10.5161 23.6103 10.7097 23.6473 10.7097C23.6885 10.7097 23.7122 11.2043 23.7122 12.0645C23.7122 12.9247 23.6885 13.4194 23.6473 13.4194C23.6112 13.4194 23.5824 13.5914 23.5824 13.8065C23.5824 14.0215 23.5536 14.1935 23.5176 14.1935C23.4819 14.1935 23.4527 14.3097 23.4527 14.4516C23.4527 14.5935 23.4235 14.7097 23.3878 14.7097C23.3522 14.7097 23.323 14.8258 23.323 14.9677C23.323 15.1097 23.2938 15.2258 23.2581 15.2258C23.2224 15.2258 23.1932 15.3129 23.1932 15.4194C23.1932 15.5258 23.1641 15.6129 23.1284 15.6129C23.0927 15.6129 23.0635 15.7 23.0635 15.8065C23.0635 15.9129 23.0343 16 22.9986 16C22.963 16 22.9338 16.0581 22.9338 16.129C22.9338 16.2 22.9046 16.2581 22.8689 16.2581C22.8332 16.2581 22.8041 16.3161 22.8041 16.3871C22.8041 16.4581 22.7749 16.5161 22.7392 16.5161C22.7035 16.5161 22.6743 16.5742 22.6743 16.6452C22.6743 16.7161 22.6451 16.7742 22.6095 16.7742C22.5738 16.7742 22.5446 16.8323 22.5446 16.9032C22.5446 16.9742 22.5154 17.0323 22.4797 17.0323C22.4441 17.0323 22.4149 17.0903 22.4149 17.1613C22.4149 17.2323 22.3857 17.2903 22.35 17.2903C22.3143 17.2903 22.2851 17.3484 22.2851 17.4194C22.2851 17.4903 22.2559 17.5484 22.2203 17.5484C22.1846 17.5484 22.1554 17.6001 22.1554 17.6632C22.1554 17.7263 22.097 17.8198 22.0257 17.871C21.9543 17.9221 21.8959 18.004 21.8959 18.0529C21.8959 18.1017 21.8084 18.2232 21.7014 18.3226C21.5943 18.422 21.5068 18.5375 21.5068 18.5794C21.5068 18.6211 21.39 18.7668 21.2473 18.9032C21.1046 19.0396 20.9878 19.183 20.9878 19.2219C20.9878 19.3219 20.1648 20.129 20.0628 20.129C20.0166 20.129 19.9366 20.1871 19.8851 20.2581C19.7536 20.4395 19.6905 20.4186 19.6905 20.1936C19.6905 20.0871 19.6614 20 19.6257 20C19.59 20 19.5608 19.8839 19.5608 19.7419C19.5608 19.6 19.5316 19.4839 19.4959 19.4839C19.4603 19.4839 19.4311 19.3968 19.4311 19.2903C19.4311 19.1839 19.4019 19.0968 19.3662 19.0968C19.3305 19.0968 19.3014 19.0097 19.3014 18.9032C19.3014 18.7968 19.2722 18.7097 19.2365 18.7097C19.2008 18.7097 19.1716 18.6516 19.1716 18.5806C19.1716 18.5097 19.1424 18.4516 19.1068 18.4516C19.0711 18.4516 19.0419 18.3935 19.0419 18.3226C19.0419 18.2516 19.0127 18.1935 18.977 18.1935C18.9414 18.1935 18.9122 18.1355 18.9122 18.0645C18.9122 17.9935 18.883 17.9355 18.8473 17.9355C18.8116 17.9355 18.7824 17.8838 18.7824 17.8207C18.7824 17.7575 18.7241 17.6641 18.6527 17.6129C18.5814 17.5617 18.523 17.4805 18.523 17.4323C18.523 17.3841 18.4062 17.2332 18.2635 17.0968C18.1208 16.9604 18.0041 16.8166 18.0041 16.7771C18.0041 16.6831 17.5756 16.2581 17.4809 16.2581C17.4405 16.2581 17.3256 16.171 17.2257 16.0645C17.1257 15.9581 16.9972 15.871 16.9402 15.871C16.8831 15.871 16.8365 15.8419 16.8365 15.8065C16.8365 15.771 16.7781 15.7419 16.7068 15.7419C16.6354 15.7419 16.577 15.7129 16.577 15.6774C16.577 15.6419 16.4895 15.6129 16.3824 15.6129C16.2754 15.6129 16.1878 15.5839 16.1878 15.5484C16.1878 15.5101 15.95 15.4839 15.6041 15.4839C15.2581 15.4839 15.0203 15.5101 15.0203 15.5484C15.0203 15.5839 14.9327 15.6129 14.8257 15.6129C14.7186 15.6129 14.6311 15.6419 14.6311 15.6774C14.6311 15.7129 14.5499 15.7419 14.4508 15.7419C14.345 15.7419 14.232 15.7952 14.177 15.871C14.1256 15.9419 14.0316 16 13.9681 16C13.9047 16 13.8527 16.029 13.8527 16.0645C13.8527 16.1 13.7651 16.129 13.6581 16.129C13.5511 16.129 13.4635 16.1581 13.4635 16.1935C13.4635 16.2326 13.1825 16.2581 12.75 16.2581C12.3175 16.2581 12.0365 16.2326 12.0365 16.1935C12.0365 16.1581 11.9489 16.129 11.8419 16.129C11.7349 16.129 11.6473 16.1 11.6473 16.0645C11.6473 16.029 11.5953 16 11.5319 16C11.4684 16 11.3744 15.9419 11.323 15.871C11.268 15.7952 11.155 15.7419 11.0492 15.7419C10.9501 15.7419 10.8689 15.7129 10.8689 15.6774C10.8689 15.6419 10.7814 15.6129 10.6743 15.6129C10.5673 15.6129 10.4797 15.5839 10.4797 15.5484C10.4797 15.5101 10.2419 15.4839 9.89595 15.4839C9.55002 15.4839 9.31216 15.5101 9.31216 15.5484C9.31216 15.5839 9.2246 15.6129 9.11757 15.6129C9.01054 15.6129 8.92297 15.6419 8.92297 15.6774C8.92297 15.7129 8.8646 15.7419 8.79324 15.7419C8.72189 15.7419 8.66351 15.771 8.66351 15.8065C8.66351 15.8419 8.61688 15.871 8.55979 15.871C8.50278 15.871 8.37428 15.9581 8.27432 16.0645C8.17437 16.171 8.05949 16.2581 8.01908 16.2581C7.92438 16.2581 7.49595 16.6831 7.49595 16.7771C7.49595 16.8166 7.37919 16.9604 7.23649 17.0968C7.09378 17.2332 6.97703 17.3841 6.97703 17.4323C6.97703 17.4805 6.91865 17.5617 6.8473 17.6129C6.77595 17.6641 6.71757 17.7575 6.71757 17.8207C6.71757 17.8838 6.68838 17.9355 6.6527 17.9355C6.61703 17.9355 6.58784 17.9935 6.58784 18.0645C6.58784 18.1355 6.55865 18.1935 6.52297 18.1935C6.4873 18.1935 6.45811 18.2516 6.45811 18.3226C6.45811 18.3935 6.42892 18.4516 6.39324 18.4516C6.35757 18.4516 6.32838 18.5097 6.32838 18.5806C6.32838 18.6516 6.29919 18.7097 6.26351 18.7097C6.22784 18.7097 6.19865 18.7968 6.19865 18.9032C6.19865 19.0097 6.16946 19.0968 6.13378 19.0968C6.09811 19.0968 6.06892 19.1839 6.06892 19.2903C6.06892 19.3968 6.03973 19.4839 6.00405 19.4839C5.96838 19.4839 5.93919 19.6 5.93919 19.7419C5.93919 19.8839 5.91 20 5.87432 20C5.83865 20 5.80946 20.0871 5.80946 20.1936C5.80946 20.3 5.78027 20.3871 5.7446 20.3871C5.70892 20.3871 5.67973 20.3581 5.67973 20.3226C5.67973 20.2871 5.63549 20.2581 5.5814 20.2581C5.47022 20.2581 4.51216 19.3303 4.51216 19.2226C4.51216 19.1843 4.36622 19.0115 4.18784 18.8387C4.00946 18.6659 3.86351 18.4855 3.86351 18.4378C3.86351 18.3901 3.80514 18.3092 3.73378 18.2581C3.66243 18.2069 3.60405 18.1198 3.60405 18.0645C3.60405 18.0092 3.54568 17.9221 3.47432 17.871C3.40297 17.8198 3.34459 17.7263 3.34459 17.6632C3.34459 17.6001 3.31541 17.5484 3.27973 17.5484C3.24405 17.5484 3.21486 17.4903 3.21486 17.4194C3.21486 17.3484 3.18568 17.2903 3.15 17.2903C3.11432 17.2903 3.08514 17.2386 3.08514 17.1755C3.08514 17.1124 3.02676 17.0189 2.95541 16.9677C2.87925 16.9131 2.82568 16.8007 2.82568 16.6954C2.82568 16.5968 2.79649 16.5161 2.76081 16.5161C2.72514 16.5161 2.69595 16.4581 2.69595 16.3871C2.69595 16.3161 2.66676 16.2581 2.63108 16.2581C2.59541 16.2581 2.56622 16.2 2.56622 16.129C2.56622 16.0581 2.53703 16 2.50135 16C2.46568 16 2.43649 15.9129 2.43649 15.8065C2.43649 15.7 2.4073 15.6129 2.37162 15.6129C2.33595 15.6129 2.30676 15.5258 2.30676 15.4194C2.30676 15.3129 2.27757 15.2258 2.24189 15.2258C2.20622 15.2258 2.17703 15.1387 2.17703 15.0323C2.17703 14.9258 2.14784 14.8387 2.11216 14.8387C2.07649 14.8387 2.0473 14.6935 2.0473 14.5161C2.0473 14.3387 2.01811 14.1935 1.98243 14.1935C1.94637 14.1935 1.91757 14.0215 1.91757 13.8065C1.91757 13.5914 1.88877 13.4194 1.8527 13.4194C1.81145 13.4194 1.78784 12.9032 1.78784 12C1.78784 11.0968 1.81145 10.5806 1.8527 10.5806C1.88877 10.5806 1.91757 10.4086 1.91757 10.1935C1.91757 9.97852 1.94637 9.80645 1.98243 9.80645C2.01811 9.80645 2.0473 9.66129 2.0473 9.48387C2.0473 9.30645 2.07649 9.16129 2.11216 9.16129C2.14784 9.16129 2.17703 9.07419 2.17703 8.96774C2.17703 8.86129 2.20622 8.77419 2.24189 8.77419C2.27757 8.77419 2.30676 8.6871 2.30676 8.58064C2.30676 8.47419 2.33595 8.3871 2.37162 8.3871C2.4073 8.3871 2.43649 8.3 2.43649 8.19355C2.43649 8.0871 2.46568 8 2.50135 8C2.53703 8 2.56622 7.94194 2.56622 7.87097C2.56622 7.8 2.59541 7.74193 2.63108 7.74193C2.66676 7.74193 2.69595 7.68387 2.69595 7.6129C2.69595 7.54194 2.72514 7.48387 2.76081 7.48387C2.79649 7.48387 2.82568 7.40316 2.82568 7.30458C2.82568 7.19929 2.87925 7.0869 2.95541 7.03226C3.02676 6.9811 3.08514 6.88761 3.08514 6.82445C3.08514 6.76135 3.11432 6.70968 3.15 6.70968C3.18568 6.70968 3.21486 6.65161 3.21486 6.58065C3.21486 6.50968 3.24405 6.45161 3.27973 6.45161C3.31541 6.45161 3.34459 6.39994 3.34459 6.33684C3.34459 6.27368 3.40297 6.18019 3.47432 6.12903C3.54568 6.07787 3.60405 5.996 3.60405 5.9471C3.60405 5.89826 3.69162 5.77684 3.79865 5.67742C3.90568 5.578 3.99324 5.46245 3.99324 5.42065C3.99324 5.3789 4.11 5.23316 4.2527 5.09677C4.39541 4.96039 4.51216 4.81703 4.51216 4.77819C4.51216 4.68613 5.46146 3.74194 5.55402 3.74194C5.59307 3.74194 5.7372 3.62581 5.87432 3.48387C6.01145 3.34194 6.16323 3.22581 6.21169 3.22581C6.26014 3.22581 6.34181 3.16774 6.39324 3.09677C6.44468 3.02581 6.53225 2.96774 6.58784 2.96774C6.64343 2.96774 6.73099 2.90968 6.78243 2.83871C6.83387 2.76774 6.92144 2.70968 6.97703 2.70968C7.03262 2.70968 7.12018 2.65161 7.17162 2.58065C7.22306 2.50968 7.31705 2.45161 7.38055 2.45161C7.44399 2.45161 7.49595 2.42258 7.49595 2.3871C7.49595 2.35161 7.55432 2.32258 7.62568 2.32258C7.69703 2.32258 7.75541 2.29355 7.75541 2.25806C7.75541 2.22258 7.81378 2.19355 7.88513 2.19355C7.95649 2.19355 8.01486 2.16452 8.01486 2.12903C8.01486 2.09355 8.07324 2.06452 8.14459 2.06452C8.21595 2.06452 8.27432 2.03548 8.27432 2C8.27432 1.96452 8.36189 1.93548 8.46892 1.93548C8.57595 1.93548 8.66351 1.90645 8.66351 1.87097C8.66351 1.83548 8.72189 1.80645 8.79324 1.80645C8.8646 1.80645 8.92297 1.77742 8.92297 1.74194C8.92297 1.70645 9.01054 1.67742 9.11757 1.67742C9.2246 1.67742 9.31216 1.64839 9.31216 1.6129C9.31216 1.57742 9.39973 1.54839 9.50676 1.54839C9.61378 1.54839 9.70135 1.51935 9.70135 1.48387C9.70135 1.44839 9.81811 1.41935 9.96081 1.41935C10.1035 1.41935 10.2203 1.39032 10.2203 1.35484C10.2203 1.31935 10.3662 1.29032 10.5446 1.29032C10.723 1.29032 10.8689 1.26129 10.8689 1.22581C10.8689 1.18755 11.1068 1.16129 11.4527 1.16129C11.7986 1.16129 12.0365 1.13503 12.0365 1.09677C12.0365 1.05768 12.3175 1.03226 12.75 1.03226C13.1825 1.03226 13.4635 1.05768 13.4635 1.09677ZM11.9068 3.67742C11.9068 3.7129 11.79 3.74194 11.6473 3.74194C11.5046 3.74194 11.3878 3.77097 11.3878 3.80645C11.3878 3.84194 11.3003 3.87097 11.1932 3.87097C11.0862 3.87097 10.9986 3.9 10.9986 3.93548C10.9986 3.97097 10.9111 4 10.8041 4C10.697 4 10.6095 4.02903 10.6095 4.06452C10.6095 4.1 10.5511 4.12903 10.4797 4.12903C10.4084 4.12903 10.35 4.15806 10.35 4.19355C10.35 4.22903 10.298 4.25806 10.2346 4.25806C10.1711 4.25806 10.0771 4.31613 10.0257 4.3871C9.97424 4.45806 9.89445 4.51613 9.84834 4.51613C9.73904 4.51613 8.53378 5.7149 8.53378 5.82361C8.53378 5.86948 8.47541 5.94884 8.40405 6C8.3327 6.05116 8.27432 6.14465 8.27432 6.20781C8.27432 6.2709 8.24514 6.32258 8.20946 6.32258C8.17378 6.32258 8.14459 6.38064 8.14459 6.45161C8.14459 6.52258 8.11541 6.58065 8.07973 6.58065C8.04405 6.58065 8.01486 6.66774 8.01486 6.77419C8.01486 6.88065 7.98568 6.96774 7.95 6.96774C7.91432 6.96774 7.88513 7.05484 7.88513 7.16129C7.88513 7.26774 7.85595 7.35484 7.82027 7.35484C7.78459 7.35484 7.75541 7.5 7.75541 7.67742C7.75541 7.85484 7.72622 8 7.69054 8C7.65162 8 7.62568 8.25806 7.62568 8.64516C7.62568 9.03226 7.65162 9.29032 7.69054 9.29032C7.72661 9.29032 7.75541 9.46239 7.75541 9.67742C7.75541 9.89245 7.78421 10.0645 7.82027 10.0645C7.85595 10.0645 7.88513 10.1806 7.88513 10.3226C7.88513 10.4645 7.91432 10.5806 7.95 10.5806C7.98568 10.5806 8.01486 10.6387 8.01486 10.7097C8.01486 10.7806 8.04405 10.8387 8.07973 10.8387C8.11541 10.8387 8.14459 10.9258 8.14459 11.0323C8.14459 11.1387 8.17378 11.2258 8.20946 11.2258C8.24514 11.2258 8.27432 11.2839 8.27432 11.3548C8.27432 11.4258 8.30351 11.4839 8.33919 11.4839C8.37486 11.4839 8.40405 11.5419 8.40405 11.6129C8.40405 11.6839 8.43324 11.7419 8.46892 11.7419C8.50459 11.7419 8.53378 11.8 8.53378 11.871C8.53378 11.9419 8.56297 12 8.59865 12C8.63433 12 8.66351 12.0581 8.66351 12.129C8.66351 12.2 8.6927 12.2581 8.72838 12.2581C8.76405 12.2581 8.79324 12.3045 8.79324 12.3612C8.79324 12.4179 8.88081 12.5457 8.98784 12.6452C9.09486 12.7446 9.18243 12.8583 9.18243 12.8977C9.18243 12.9984 10.3949 14.1935 10.497 14.1935C10.5431 14.1935 10.6229 14.2516 10.6743 14.3226C10.7258 14.3935 10.8198 14.4516 10.8833 14.4516C10.9467 14.4516 10.9986 14.4806 10.9986 14.5161C10.9986 14.5516 11.057 14.5806 11.1284 14.5806C11.1997 14.5806 11.2581 14.6097 11.2581 14.6452C11.2581 14.6806 11.3457 14.7097 11.4527 14.7097C11.5597 14.7097 11.6473 14.7387 11.6473 14.7742C11.6473 14.8097 11.7932 14.8387 11.9716 14.8387C12.15 14.8387 12.2959 14.8677 12.2959 14.9032C12.2959 14.9401 12.4905 14.9677 12.75 14.9677C13.0095 14.9677 13.2041 14.9401 13.2041 14.9032C13.2041 14.8677 13.35 14.8387 13.5284 14.8387C13.7068 14.8387 13.8527 14.8097 13.8527 14.7742C13.8527 14.7387 13.9111 14.7097 13.9824 14.7097C14.0538 14.7097 14.1122 14.6806 14.1122 14.6452C14.1122 14.6097 14.1997 14.5806 14.3068 14.5806C14.4138 14.5806 14.5014 14.5516 14.5014 14.5161C14.5014 14.4806 14.5533 14.4516 14.6167 14.4516C14.6802 14.4516 14.7742 14.3935 14.8257 14.3226C14.8771 14.2516 14.9569 14.1935 15.003 14.1935C15.1123 14.1935 16.3176 12.9948 16.3176 12.8861C16.3176 12.8402 16.3759 12.7608 16.4473 12.7097C16.5187 12.6585 16.577 12.5714 16.577 12.5161C16.577 12.4608 16.6354 12.3737 16.7068 12.3226C16.7781 12.2714 16.8365 12.1779 16.8365 12.1148C16.8365 12.0517 16.8657 12 16.9014 12C16.937 12 16.9662 11.9419 16.9662 11.871C16.9662 11.8 16.9954 11.7419 17.0311 11.7419C17.0668 11.7419 17.0959 11.6839 17.0959 11.6129C17.0959 11.5419 17.1251 11.4839 17.1608 11.4839C17.1965 11.4839 17.2257 11.4258 17.2257 11.3548C17.2257 11.2839 17.2549 11.2258 17.2905 11.2258C17.3262 11.2258 17.3554 11.1387 17.3554 11.0323C17.3554 10.9258 17.3846 10.8387 17.4203 10.8387C17.4559 10.8387 17.4851 10.7516 17.4851 10.6452C17.4851 10.5387 17.5143 10.4516 17.55 10.4516C17.5857 10.4516 17.6149 10.3645 17.6149 10.2581C17.6149 10.1516 17.6441 10.0645 17.6797 10.0645C17.7158 10.0645 17.7446 9.89245 17.7446 9.67742C17.7446 9.46239 17.7734 9.29032 17.8095 9.29032C17.8473 9.29032 17.8743 9.07529 17.8743 8.77419C17.8743 8.4731 17.8473 8.25806 17.8095 8.25806C17.7734 8.25806 17.7446 8.086 17.7446 7.87097C17.7446 7.65594 17.7158 7.48387 17.6797 7.48387C17.6441 7.48387 17.6149 7.36774 17.6149 7.22581C17.6149 7.08387 17.5857 6.96774 17.55 6.96774C17.5143 6.96774 17.4851 6.90968 17.4851 6.83871C17.4851 6.76774 17.4559 6.70968 17.4203 6.70968C17.3846 6.70968 17.3554 6.62897 17.3554 6.53039C17.3554 6.4251 17.3018 6.31271 17.2257 6.25806C17.1543 6.2069 17.0959 6.11981 17.0959 6.06452C17.0959 6.00923 17.0376 5.92213 16.9662 5.87097C16.8949 5.81981 16.8365 5.74039 16.8365 5.69452C16.8365 5.58568 15.7612 4.51613 15.6517 4.51613C15.6056 4.51613 15.5258 4.45806 15.4743 4.3871C15.4229 4.31613 15.3289 4.25806 15.2654 4.25806C15.202 4.25806 15.15 4.22903 15.15 4.19355C15.15 4.15806 15.0916 4.12903 15.0203 4.12903C14.9489 4.12903 14.8905 4.1 14.8905 4.06452C14.8905 4.02903 14.803 4 14.6959 4C14.5889 4 14.5014 3.97097 14.5014 3.93548C14.5014 3.9 14.4138 3.87097 14.3068 3.87097C14.1997 3.87097 14.1122 3.84194 14.1122 3.80645C14.1122 3.77097 13.9954 3.74194 13.8527 3.74194C13.71 3.74194 13.5932 3.7129 13.5932 3.67742C13.5932 3.63774 13.2689 3.6129 12.75 3.6129C12.2311 3.6129 11.9068 3.63774 11.9068 3.67742ZM13.3338 4.70968C13.3338 4.74516 13.4797 4.77419 13.6581 4.77419C13.8365 4.77419 13.9824 4.80323 13.9824 4.83871C13.9824 4.87419 14.0408 4.90323 14.1122 4.90323C14.1835 4.90323 14.2419 4.93226 14.2419 4.96774C14.2419 5.00323 14.323 5.03226 14.4222 5.03226C14.528 5.03226 14.641 5.08555 14.6959 5.16129C14.7474 5.23226 14.8297 5.29032 14.8789 5.29032C14.928 5.29032 15.05 5.37742 15.15 5.48387C15.25 5.59032 15.3652 5.67742 15.406 5.67742C15.5023 5.67742 15.7986 5.97219 15.7986 6.06793C15.7986 6.10858 15.8862 6.22316 15.9932 6.32258C16.1003 6.422 16.1878 6.54981 16.1878 6.60652C16.1878 6.66329 16.217 6.70968 16.2527 6.70968C16.2884 6.70968 16.3176 6.76774 16.3176 6.83871C16.3176 6.90968 16.3468 6.96774 16.3824 6.96774C16.4181 6.96774 16.4473 7.02581 16.4473 7.09677C16.4473 7.16774 16.4765 7.22581 16.5122 7.22581C16.5478 7.22581 16.577 7.3129 16.577 7.41935C16.577 7.52581 16.6062 7.6129 16.6419 7.6129C16.6789 7.6129 16.7068 7.80645 16.7068 8.06452C16.7068 8.32258 16.7346 8.51613 16.7716 8.51613C16.8073 8.51613 16.8365 8.60323 16.8365 8.70968C16.8365 8.81613 16.8073 8.90323 16.7716 8.90323C16.7346 8.90323 16.7068 9.09677 16.7068 9.35484C16.7068 9.6129 16.6789 9.80645 16.6419 9.80645C16.6062 9.80645 16.577 9.92258 16.577 10.0645C16.577 10.2065 16.5478 10.3226 16.5122 10.3226C16.4765 10.3226 16.4473 10.3806 16.4473 10.4516C16.4473 10.5226 16.4181 10.5806 16.3824 10.5806C16.3468 10.5806 16.3176 10.6677 16.3176 10.7742C16.3176 10.8806 16.2884 10.9677 16.2527 10.9677C16.217 10.9677 16.1878 11.0258 16.1878 11.0968C16.1878 11.1677 16.1586 11.2258 16.123 11.2258C16.0873 11.2258 16.0581 11.2775 16.0581 11.3406C16.0581 11.4037 15.9997 11.4972 15.9284 11.5484C15.857 11.5995 15.7986 11.693 15.7986 11.7562C15.7986 11.8193 15.7695 11.871 15.7338 11.871C15.6981 11.871 15.6689 11.9148 15.6689 11.9685C15.6689 12.0957 14.3381 13.4194 14.2102 13.4194C14.1563 13.4194 14.1122 13.4484 14.1122 13.4839C14.1122 13.5194 14.0538 13.5484 13.9824 13.5484C13.9111 13.5484 13.8527 13.5774 13.8527 13.6129C13.8527 13.6484 13.7943 13.6774 13.723 13.6774C13.6516 13.6774 13.5932 13.7065 13.5932 13.7419C13.5932 13.7774 13.4473 13.8065 13.2689 13.8065C13.0905 13.8065 12.9446 13.8355 12.9446 13.871C12.9446 13.9065 12.857 13.9355 12.75 13.9355C12.643 13.9355 12.5554 13.9065 12.5554 13.871C12.5554 13.8355 12.4095 13.8065 12.2311 13.8065C12.0527 13.8065 11.9068 13.7774 11.9068 13.7419C11.9068 13.7065 11.8484 13.6774 11.777 13.6774C11.7057 13.6774 11.6473 13.6484 11.6473 13.6129C11.6473 13.5774 11.5889 13.5484 11.5176 13.5484C11.4462 13.5484 11.3878 13.5194 11.3878 13.4839C11.3878 13.4484 11.3418 13.4194 11.2855 13.4194C11.2291 13.4194 11.0709 13.3032 10.9338 13.1613C10.7967 13.0194 10.6509 12.9032 10.6099 12.9032C10.5136 12.9032 10.35 12.7405 10.35 12.6447C10.35 12.6039 10.2332 12.459 10.0905 12.3226C9.94784 12.1862 9.83108 12.0352 9.83108 11.987C9.83108 11.9388 9.7727 11.8576 9.70135 11.8065C9.63 11.7553 9.57162 11.6618 9.57162 11.5986C9.57162 11.5355 9.54243 11.4839 9.50676 11.4839C9.47108 11.4839 9.44189 11.4258 9.44189 11.3548C9.44189 11.2839 9.4127 11.2258 9.37703 11.2258C9.34135 11.2258 9.31216 11.1677 9.31216 11.0968C9.31216 11.0258 9.28297 10.9677 9.2473 10.9677C9.21162 10.9677 9.18243 10.8806 9.18243 10.7742C9.18243 10.6677 9.15324 10.5806 9.11757 10.5806C9.08189 10.5806 9.0527 10.5226 9.0527 10.4516C9.0527 10.3806 9.02351 10.3226 8.98784 10.3226C8.95216 10.3226 8.92297 10.2065 8.92297 10.0645C8.92297 9.92258 8.89378 9.80645 8.85811 9.80645C8.82107 9.80645 8.79324 9.6129 8.79324 9.35484C8.79324 9.09677 8.76542 8.90323 8.72838 8.90323C8.6927 8.90323 8.66351 8.75806 8.66351 8.58064C8.66351 8.40322 8.6927 8.25806 8.72838 8.25806C8.76405 8.25806 8.79324 8.1129 8.79324 7.93548C8.79324 7.75806 8.82243 7.6129 8.85811 7.6129C8.89378 7.6129 8.92297 7.52581 8.92297 7.41935C8.92297 7.3129 8.95216 7.22581 8.98784 7.22581C9.02351 7.22581 9.0527 7.16774 9.0527 7.09677C9.0527 7.02581 9.08189 6.96774 9.11757 6.96774C9.15324 6.96774 9.18243 6.90968 9.18243 6.83871C9.18243 6.76774 9.21162 6.70968 9.2473 6.70968C9.28297 6.70968 9.31216 6.658 9.31216 6.5949C9.31216 6.53174 9.37054 6.43826 9.44189 6.3871C9.51324 6.33594 9.57162 6.25619 9.57162 6.20987C9.57162 6.10026 10.1265 5.54839 10.2367 5.54839C10.2833 5.54839 10.3634 5.49032 10.4149 5.41935C10.4663 5.34839 10.5539 5.29032 10.6095 5.29032C10.665 5.29032 10.7526 5.23226 10.8041 5.16129C10.859 5.08555 10.972 5.03226 11.0778 5.03226C11.177 5.03226 11.2581 5.00323 11.2581 4.96774C11.2581 4.93226 11.3165 4.90323 11.3878 4.90323C11.4592 4.90323 11.5176 4.87419 11.5176 4.83871C11.5176 4.80323 11.6635 4.77419 11.8419 4.77419C12.0203 4.77419 12.1662 4.74516 12.1662 4.70968C12.1662 4.67142 12.4041 4.64516 12.75 4.64516C13.0959 4.64516 13.3338 4.67142 13.3338 4.70968ZM10.35 16.5806C10.35 16.6161 10.4084 16.6452 10.4797 16.6452C10.5511 16.6452 10.6095 16.6742 10.6095 16.7097C10.6095 16.7452 10.6678 16.7742 10.7392 16.7742C10.8105 16.7742 10.8689 16.8032 10.8689 16.8387C10.8689 16.8742 10.9273 16.9032 10.9986 16.9032C11.07 16.9032 11.1284 16.9323 11.1284 16.9677C11.1284 17.0032 11.1868 17.0323 11.2581 17.0323C11.3295 17.0323 11.3878 17.0613 11.3878 17.0968C11.3878 17.1323 11.4754 17.1613 11.5824 17.1613C11.6895 17.1613 11.777 17.1903 11.777 17.2258C11.777 17.2659 12.1446 17.2903 12.75 17.2903C13.3554 17.2903 13.723 17.2659 13.723 17.2258C13.723 17.1903 13.8105 17.1613 13.9176 17.1613C14.0246 17.1613 14.1122 17.1323 14.1122 17.0968C14.1122 17.0613 14.1705 17.0323 14.2419 17.0323C14.3132 17.0323 14.3716 17.0032 14.3716 16.9677C14.3716 16.9323 14.43 16.9032 14.5014 16.9032C14.5727 16.9032 14.6311 16.8742 14.6311 16.8387C14.6311 16.8032 14.6895 16.7742 14.7608 16.7742C14.8322 16.7742 14.8905 16.7452 14.8905 16.7097C14.8905 16.6742 14.9489 16.6452 15.0203 16.6452C15.0916 16.6452 15.15 16.6161 15.15 16.5806C15.15 16.5438 15.3446 16.5161 15.6041 16.5161C15.8635 16.5161 16.0581 16.5438 16.0581 16.5806C16.0581 16.6161 16.1165 16.6452 16.1878 16.6452C16.2592 16.6452 16.3176 16.6742 16.3176 16.7097C16.3176 16.7452 16.3618 16.7742 16.4159 16.7742C16.5355 16.7742 17.4851 17.7061 17.4851 17.8234C17.4851 17.8694 17.5435 17.9488 17.6149 18C17.6862 18.0512 17.7446 18.1446 17.7446 18.2078C17.7446 18.2709 17.7738 18.3226 17.8095 18.3226C17.8451 18.3226 17.8743 18.3743 17.8743 18.4374C17.8743 18.5005 17.9327 18.594 18.0041 18.6452C18.0802 18.6998 18.1338 18.8122 18.1338 18.9175C18.1338 19.0161 18.163 19.0968 18.1986 19.0968C18.2343 19.0968 18.2635 19.1548 18.2635 19.2258C18.2635 19.2968 18.2927 19.3548 18.3284 19.3548C18.3641 19.3548 18.3932 19.4419 18.3932 19.5484C18.3932 19.6548 18.4224 19.7419 18.4581 19.7419C18.4938 19.7419 18.523 19.8581 18.523 20C18.523 20.1419 18.5522 20.2581 18.5878 20.2581C18.6257 20.2581 18.6527 20.4731 18.6527 20.7742C18.6527 21.2259 18.6383 21.2903 18.5373 21.2903C18.4738 21.2903 18.3798 21.3484 18.3284 21.4194C18.2769 21.4903 18.183 21.5484 18.1194 21.5484C18.056 21.5484 18.0041 21.5774 18.0041 21.6129C18.0041 21.6484 17.9457 21.6774 17.8743 21.6774C17.803 21.6774 17.7446 21.7065 17.7446 21.7419C17.7446 21.7774 17.6862 21.8065 17.6149 21.8065C17.5435 21.8065 17.4851 21.8355 17.4851 21.871C17.4851 21.9065 17.4268 21.9355 17.3554 21.9355C17.2841 21.9355 17.2257 21.9645 17.2257 22C17.2257 22.0355 17.1673 22.0645 17.0959 22.0645C17.0246 22.0645 16.9662 22.0935 16.9662 22.129C16.9662 22.1645 16.8786 22.1935 16.7716 22.1935C16.6646 22.1935 16.577 22.2226 16.577 22.2581C16.577 22.2935 16.4895 22.3226 16.3824 22.3226C16.2754 22.3226 16.1878 22.3516 16.1878 22.3871C16.1878 22.4226 16.1003 22.4516 15.9932 22.4516C15.8862 22.4516 15.7986 22.4806 15.7986 22.5161C15.7986 22.5516 15.6819 22.5806 15.5392 22.5806C15.3965 22.5806 15.2797 22.6097 15.2797 22.6452C15.2797 22.6806 15.1338 22.7097 14.9554 22.7097C14.777 22.7097 14.6311 22.7387 14.6311 22.7742C14.6311 22.811 14.4365 22.8387 14.177 22.8387C13.9176 22.8387 13.723 22.8664 13.723 22.9032C13.723 22.9434 13.3554 22.9677 12.75 22.9677C12.1446 22.9677 11.777 22.9434 11.777 22.9032C11.777 22.8664 11.5824 22.8387 11.323 22.8387C11.0635 22.8387 10.8689 22.811 10.8689 22.7742C10.8689 22.7387 10.723 22.7097 10.5446 22.7097C10.3662 22.7097 10.2203 22.6806 10.2203 22.6452C10.2203 22.6097 10.1035 22.5806 9.96081 22.5806C9.81811 22.5806 9.70135 22.5516 9.70135 22.5161C9.70135 22.4806 9.61378 22.4516 9.50676 22.4516C9.39973 22.4516 9.31216 22.4226 9.31216 22.3871C9.31216 22.3516 9.2246 22.3226 9.11757 22.3226C9.01054 22.3226 8.92297 22.2935 8.92297 22.2581C8.92297 22.2226 8.83541 22.1935 8.72838 22.1935C8.62135 22.1935 8.53378 22.1645 8.53378 22.129C8.53378 22.0935 8.47541 22.0645 8.40405 22.0645C8.3327 22.0645 8.27432 22.0355 8.27432 22C8.27432 21.9645 8.21595 21.9355 8.14459 21.9355C8.07324 21.9355 8.01486 21.9065 8.01486 21.871C8.01486 21.8355 7.95649 21.8065 7.88513 21.8065C7.81378 21.8065 7.75541 21.7774 7.75541 21.7419C7.75541 21.7065 7.69703 21.6774 7.62568 21.6774C7.55432 21.6774 7.49595 21.6484 7.49595 21.6129C7.49595 21.5774 7.44399 21.5484 7.38055 21.5484C7.31705 21.5484 7.22306 21.4903 7.17162 21.4194C7.12018 21.3484 7.0262 21.2903 6.96269 21.2903C6.8617 21.2903 6.8473 21.2259 6.8473 20.7742C6.8473 20.4731 6.87435 20.2581 6.91216 20.2581C6.94784 20.2581 6.97703 20.1419 6.97703 20C6.97703 19.8581 7.00622 19.7419 7.04189 19.7419C7.07757 19.7419 7.10676 19.6548 7.10676 19.5484C7.10676 19.4419 7.13595 19.3548 7.17162 19.3548C7.2073 19.3548 7.23649 19.2677 7.23649 19.1613C7.23649 19.0548 7.26568 18.9677 7.30135 18.9677C7.33703 18.9677 7.36622 18.9097 7.36622 18.8387C7.36622 18.7677 7.39541 18.7097 7.43108 18.7097C7.46676 18.7097 7.49595 18.658 7.49595 18.5949C7.49595 18.5317 7.55432 18.4383 7.62568 18.3871C7.69703 18.3359 7.75541 18.2488 7.75541 18.1935C7.75541 18.1383 7.81378 18.0512 7.88513 18C7.95649 17.9488 8.01486 17.8694 8.01486 17.8234C8.01486 17.7061 8.96449 16.7742 9.0841 16.7742C9.1382 16.7742 9.18243 16.7452 9.18243 16.7097C9.18243 16.6742 9.24081 16.6452 9.31216 16.6452C9.38351 16.6452 9.44189 16.6161 9.44189 16.5806C9.44189 16.5438 9.63649 16.5161 9.89595 16.5161C10.1554 16.5161 10.35 16.5438 10.35 16.5806Z" fill="#555555"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Perfil"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }}), 
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b3MyProfile");
        }
        ],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={24}     height={24}     viewBox="0 0 24 24"     {...props}   >     <Path       fill="#000"       d="M14 12a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 6a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM14 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z" fill="black"/> <path d="M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z" fill="black"/> <path d="M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z" fill="black"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Pagamento"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxPayments");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 
        

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M12.5 7.5v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h9.5a1 1 0 0 0 1-1V10M4.34 2 10.01.52a.49.49 0 0 1 .61.36L10.9 2m.1 5.5h2.5a.5.5 0 0 1 .5.5v1.5a.5.5 0 0 1-.5.5H11a.5.5 0 0 1-.5-.5V8a.5.5 0 0 1 .5-.5Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M12.5 7.50007V5.50007C12.5 5.23486 12.3946 4.9805 12.2071 4.79297C12.0196 4.60543 11.7652 4.50007 11.5 4.50007H2C1.73478 4.50007 1.48043 4.60543 1.29289 4.79297C1.10536 4.9805 1 5.23486 1 5.50007V12.5001C1 12.7653 1.10536 13.0196 1.29289 13.2072C1.48043 13.3947 1.73478 13.5001 2 13.5001H11.5C11.7652 13.5001 12.0196 13.3947 12.2071 13.2072C12.3946 13.0196 12.5 12.7653 12.5 12.5001V10.0001M4.34 2.00007L10.01 0.520072C10.0737 0.50212 10.1404 0.497264 10.206 0.505797C10.2717 0.514329 10.3349 0.536074 10.3919 0.569717C10.4489 0.603361 10.4985 0.648207 10.5377 0.701548C10.5769 0.754888 10.6049 0.815618 10.62 0.880072L10.9 2.00007M11 7.50007H13.5C13.7761 7.50007 14 7.72393 14 8.00007V9.50007C14 9.77621 13.7761 10.0001 13.5 10.0001H11C10.7239 10.0001 10.5 9.77621 10.5 9.50007V8.00007C10.5 7.72393 10.7239 7.50007 11 7.50007Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Carteira"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("bxxWallet");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        , 

          (...args:any) => <Elements.DynView pass={{
            elementsProperties:[{}],

            styles:[
stls.paddingHorizontal({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }}), stls.paddingVertical({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "10px"
        }})] }})],

            variablePath:[ ],

            expectedVal:[ ],

            childrenItems:[(...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [stls.flexDirection({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "row"
        }})] }})],

          childrenItems: [
        (...args:any) => <Elements.SvgView1 pass={{
      componentSvg: (Svg:any, SvgObj:any) => {
        const { Defs, Stop, Path, LinearGradient, G, Circle, Rect, Mask } = SvgObj;
        return (props:any) => (<Svg     xmlns="http://www.w3.org/2000/svg"     width={15}     height={14}     fill="red"     viewBox="0 0 15 14"     {...props}   >     <Path       stroke="#000001"       strokeLinecap="round"       strokeLinejoin="round"       d="M14 .5h-2.5l-.87 8.65a1 1 0 0 1-1 .85h-6.3a1 1 0 0 1-1-.68L1 5.32a1 1 0 0 1 .14-.9A1 1 0 0 1 2 4h9.15M4 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6.5 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"     />   </Svg>)
      },

      svgOriginal: `
        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M14 0.5H11.5L10.63 9.15C10.5938 9.38845 10.4727 9.6058 10.289 9.762C10.1052 9.9182 9.87117 10.0027 9.63001 10H3.33001C3.11194 10.0114 2.89614 9.95107 2.71557 9.82829C2.535 9.7055 2.39959 9.52698 2.33001 9.32L1.00001 5.32C0.950418 5.16962 0.937251 5.0096 0.961591 4.85314C0.98593 4.69667 1.04708 4.54822 1.14001 4.42C1.23681 4.28368 1.36626 4.17381 1.5165 4.10043C1.66674 4.02706 1.83297 3.99253 2.00001 4H11.15M4.00001 13C4.00001 13.2761 3.77615 13.5 3.50001 13.5C3.22386 13.5 3.00001 13.2761 3.00001 13C3.00001 12.7239 3.22386 12.5 3.50001 12.5C3.77615 12.5 4.00001 12.7239 4.00001 13ZM10.5 13C10.5 13.2761 10.2761 13.5 10 13.5C9.72386 13.5 9.50001 13.2761 9.50001 13C9.50001 12.7239 9.72386 12.5 10 12.5C10.2761 12.5 10.5 12.7239 10.5 13Z" stroke="#000001" stroke-linecap="round" stroke-linejoin="round"/> </svg>
      `,

      altura: "20px",

      largura: "40px",

      preenchimento: ['transparent'],

      args,
    }}/>, (...args:any) => <Elements.Text pass={{
          arrProps: [
            {}
          ],

          arrStyles: [
            stls.fontSize({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: 14
        }})
        ] }})
          ],

          children: [
            jsvals.j8({pass: {
          propertieValues: "Produtos"
        }})
          ],

          args,

        }}/>],

          pressableFunctions: [
        
        (...args) => {
          // ---------- get Function from A_Project Scope
          return tools.goTo("b6Products");
        }
        , async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

            args,
          }}/>
        , (...args:any) => <Elements.Pressable3 pass={{
          elementProperties: [{}],

          styles: [
stls.backgroundColor({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "rgba(0,0,0,0.5)"
        }})] }}), 
stls.flex({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "1px"
        }})] }}), 
stls.width({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }}), stls.height({ pass: { arrayValue: [jsvals.j8({pass: {
          propertieValues: "100%"
        }})] }})],

          childrenItems: [()=><></>],

          pressableFunctions: [async (...args) =>
        functions.setVar({ args, pass:{
          keyPath: [jsvals.j8({pass: {
          propertieValues: "all.toggles.sideMenu"
        }})],
          value: jsvals.j8({pass: {
          propertieValues: "hide"
        }})
        }})],

          args,
        }}/>],

            args,
          }}/>
        ],

          startFunctions:[()=>{}],

          args,
        }}/>
          ];

          const initCt = () => ({
            
        "true": jsvals.j8({pass: {
          propertieValues: "true"
        }}), 
        'all': jsvals.j8({pass: {
          propertieValues: { 
        'firebaseConfig': jsvals.j8({pass: {
          propertieValues: { 
        "apiKey": jsvals.j8({pass: {
          propertieValues: "AIzaSyDjAfyEUADq7EaRyFWlGFjP1Eoox9LJHgI"
        }}), 
        "authDomain": jsvals.j8({pass: {
          propertieValues: "devs-tests-95208.firebaseapp.com"
        }}), 
        "projectId": jsvals.j8({pass: {
          propertieValues: "devs-tests-95208"
        }}), 
        "storageBucket": jsvals.j8({pass: {
          propertieValues: "devs-tests-95208.appspot.com"
        }}), 
        "messagingSenderId": jsvals.j8({pass: {
          propertieValues: "750912250366"
        }}), "appId": jsvals.j8({pass: {
          propertieValues: "1:750912250366:web:4629eac789a718a74220af"
        }}) }
        }}), 
        'colors': jsvals.j8({pass: {
          propertieValues: { 
        "dark": jsvals.j8({pass: {
          propertieValues: "#000"
        }}), 
        "light": jsvals.j8({pass: {
          propertieValues: "#fff"
        }}), 
        "primary": jsvals.j8({pass: {
          propertieValues: "#2D3249"
        }}), 
        "secondary": jsvals.j8({pass: {
          propertieValues: "#25293C"
        }}), 
        "success": jsvals.j8({pass: {
          propertieValues: "#198754"
        }}), 
        "danger": jsvals.j8({pass: {
          propertieValues: "#dc3545"
        }}), 
        "warning": jsvals.j8({pass: {
          propertieValues: "#ffc107"
        }}), 
        "info": jsvals.j8({pass: {
          propertieValues: "#0dcaf0"
        }}), 
        "gray1": jsvals.j8({pass: {
          propertieValues: "#eeeeee"
        }}), 
        "gray2": jsvals.j8({pass: {
          propertieValues: "#dddddd"
        }}), 
        "gray3": jsvals.j8({pass: {
          propertieValues: "#cccccc"
        }}), 
        "gray4": jsvals.j8({pass: {
          propertieValues: "#bbbbbb"
        }}), 
        "gray5": jsvals.j8({pass: {
          propertieValues: "#a3a3a3"
        }}), 
        "backDS": jsvals.j8({pass: {
          propertieValues: "#D3D3D3"
        }}), 
        "defaultScreenBg": jsvals.j8({pass: {
          propertieValues: "rgb(245, 245, 245)"
        }}), 
        "bgMenuOut": jsvals.j8({pass: {
          propertieValues: "#16161E"
        }}), 
        "bgMenuIn": jsvals.j8({pass: {
          propertieValues: "#242434"
        }}), 
        "purple": jsvals.j8({pass: {
          propertieValues: "#7826FF"
        }}), 
        "bgBigScreen": jsvals.j8({pass: {
          propertieValues: "#F0F0F0"
        }}), 
        "btnHover": jsvals.j8({pass: {
          propertieValues: "#9f65ff"
        }}), 
        "btnDisable": jsvals.j8({pass: {
          propertieValues: "#d0d0d0"
        }}), 
        "secundarySM": jsvals.j8({pass: {
          propertieValues: "#2F3349"
        }}), "lightSM": jsvals.j8({pass: {
          propertieValues: "#CFCDE4"
        }}) }
        }}), 
        'textSizes': jsvals.j8({pass: {
          propertieValues: { 
        "small": jsvals.j8({pass: {
          propertieValues: "12px"
        }}), 
        "medium": jsvals.j8({pass: {
          propertieValues: "14px"
        }}), 
        "large": jsvals.j8({pass: {
          propertieValues: "16px"
        }}), "superLarge": jsvals.j8({pass: {
          propertieValues: "18px"
        }}) }
        }}), 
        'user': jsvals.j8({pass: {
          propertieValues: { 
        "userImage": jsvals.j8({pass: {
          propertieValues: "https://t3.ftcdn.net/jpg/02/22/85/16/360_F_222851624_jfoMGbJxwRi5AWGdPgXKSABMnzCQo9RN.jpg"
        }}), 
        "userName": jsvals.j8({pass: {
          propertieValues: "Paulo Antônio"
        }}), "userEmail": jsvals.j8({pass: {
          propertieValues: "pauloantonio@gmail.com"
        }}) }
        }}), 
        'toggles': jsvals.j8({pass: {
          propertieValues: { 
        "sideMenu": jsvals.j8({pass: {
          propertieValues: "hide"
        }}), 
        "activeForm": jsvals.j8({pass: {
          propertieValues: "none"
        }}), 
        "rightOptions": jsvals.j8({pass: {
          propertieValues: "close"
        }}), 
        "radioButton": jsvals.j8({pass: {
          propertieValues: "unselected"
        }}), 
        'activeButton': jsvals.j8({pass: {
          propertieValues: { 
        "myProfile": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "users": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "map": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "permissions": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "exit": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "iconsDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "pressDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "colorsDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "formsDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "txtIptDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "pickerDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "radioDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "viewsDS": jsvals.j8({pass: {
          propertieValues: "active"
        }}), 
        "cardsDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "alertDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "typesDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "navBarsDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "listsDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "searchDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "bannerDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "products": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "accordionDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), "statusDS": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}) }
        }}), 
        "btnSearch": jsvals.j8({pass: {
          propertieValues: "all"
        }}), 
        'searchBy': jsvals.j8({pass: {
          propertieValues: { 
        "name": jsvals.j8({pass: {
          propertieValues: "unselected"
        }}), 
        "email": jsvals.j8({pass: {
          propertieValues: "unselected"
        }}), "CPF": jsvals.j8({pass: {
          propertieValues: "unselected"
        }}) }
        }}), 
        "emptyField": jsvals.j8({pass: {
          propertieValues: "no"
        }}), 
        "emptyFieldSearch": jsvals.j8({pass: {
          propertieValues: "no"
        }}), 
        "activePicker": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "radio1": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "radio2": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "check1": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "check2": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "fileUpload": jsvals.j8({pass: {
          propertieValues: "toUpload"
        }}), 
        "radioText1": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "radioText2": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        "menuViews": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), "menuForms": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}) }
        }}), 
        'teste': jsvals.j8({pass: {
          propertieValues: { 
        'emptyArray': jsvals.j8({pass: {
          propertieValues: [   ]
        }}), 
        'mockList': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {
        "userName": jsvals.j8({pass: {
          propertieValues: "Claudio Silva"
        }}), 
        "userEmail": jsvals.j8({pass: {
          propertieValues: "silvacaca@gmail.com"
        }}), "userStatus": jsvals.j8({pass: {
          propertieValues: "Bloqueado"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {
        "userName": jsvals.j8({pass: {
          propertieValues: "Pedro Santos"
        }}), 
        "userEmail": jsvals.j8({pass: {
          propertieValues: "psantos@gmail.com"
        }}), "userStatus": jsvals.j8({pass: {
          propertieValues: "Liberado"
        }})}
        }}) ]
        }}), "mockHorizontalLogo": jsvals.j8({pass: {
          propertieValues: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSt8M10LRk9SJTEkpbXDU04mr6Fi2o_XKRReg&s"
        }}) }
        }}), 'utils': jsvals.j8({pass: {
          propertieValues: { "logo": jsvals.j8({pass: {
          propertieValues: "https://firebasestorage.googleapis.com/v0/b/devs-tests-95208.appspot.com/o/images%2Fmorfos-logo.d2181ead.png?alt=media&token=0e450878-ad31-46f0-b28f-abebb0c6abc9"
        }}) }
        }}) }
        }}), 
        'sc': jsvals.j8({pass: {
          propertieValues: { 
        'AB0': jsvals.j8({pass: {
          propertieValues: { "textTest": jsvals.j8({pass: {
          propertieValues: "Used to truncate the text with an ellipsis after computing the text layout, including line wrapping, such that the total number of lines does not exceed this number. Setting this property to 0 will result in unsetting this value, which means that no lines restriction will be applied."
        }}) }
        }}), 
        'A1': jsvals.j8({pass: {
          propertieValues: { 
        "titleName": jsvals.j8({pass: {
          propertieValues: "Start Morfos"
        }}), 
        "login": jsvals.j8({pass: {
          propertieValues: "LOGIN"
        }}), 
        "password": jsvals.j8({pass: {
          propertieValues: "SENHA"
        }}), 
        "loginUsing": jsvals.j8({pass: {
          propertieValues: "Entrar usando sua conta..."
        }}), 
        "confirm": jsvals.j8({pass: {
          propertieValues: "Confirmar"
        }}), 
        "mockID": jsvals.j8({pass: {
          propertieValues: "AduXSCnqEOjhwPeplNnQ"
        }}), 
        'toggles': jsvals.j8({pass: {
          propertieValues: { 
        "msgError": jsvals.j8({pass: {
          propertieValues: "no value"
        }}), "userBlock": jsvals.j8({pass: {
          propertieValues: "no value"
        }}) }
        }}), "boxCardCenter": jsvals.j8({pass: {
          propertieValues: "true"
        }}) }
        }}), 
        'A2': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        'sideLeft': jsvals.j8({pass: {
          propertieValues: { 
        "myProfile": jsvals.j8({pass: {
          propertieValues: "Meu Perfil"
        }}), 
        "users": jsvals.j8({pass: {
          propertieValues: "Usuários"
        }}), 
        "map": jsvals.j8({pass: {
          propertieValues: "Mapa"
        }}), "exit": jsvals.j8({pass: {
          propertieValues: "Sair"
        }}) }
        }}), 
        'toggles': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 
        'navBar': jsvals.j8({pass: {
          propertieValues: { "labelView": jsvals.j8({pass: {
          propertieValues: "Start Morfos"
        }}) }
        }}), 
        'bannerView': jsvals.j8({pass: {
          propertieValues: { 
        "label": jsvals.j8({pass: {
          propertieValues: "USUÁRIOS"
        }}), 
        "description": jsvals.j8({pass: {
          propertieValues: "Description"
        }}), 
        "addUser": jsvals.j8({pass: {
          propertieValues: "ADICIONAR"
        }}), "pathScreen": jsvals.j8({pass: {
          propertieValues: "Caminho da Tela"
        }}) }
        }}), 
        "cleanSearch": jsvals.j8({pass: {
          propertieValues: "hidden"
        }}), 
        'contentList': jsvals.j8({pass: {
          propertieValues: { 'header': jsvals.j8({pass: {
          propertieValues: { 
        "name": jsvals.j8({pass: {
          propertieValues: "Nome"
        }}), 
        "email": jsvals.j8({pass: {
          propertieValues: "E-mail"
        }}), "CPF": jsvals.j8({pass: {
          propertieValues: "CPF"
        }}) }
        }}) }
        }}), 'pickers': jsvals.j8({pass: {
          propertieValues: { 'searchFilter': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Nome"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Nome"
        }})}
        }}), 
        jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "E-mail"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "E-mail"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "CPF"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "CPF"
        }})}
        }}) ]
        }}) }
        }}) }
        }}), 
        'A3': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        'forms': jsvals.j8({pass: {
          propertieValues: { 
        'iptsChanges': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 
        'editData': jsvals.j8({pass: {
          propertieValues: { "userCPF": jsvals.j8({pass: {
          propertieValues: "111.111.111-11"
        }}) }
        }}), 'pickers': jsvals.j8({pass: {
          propertieValues: { 'status': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Ativo"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Ativo"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Bloqueado"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Bloqueado"
        }})}
        }}) ]
        }}) }
        }}) }
        }}), 
        'mock': jsvals.j8({pass: {
          propertieValues: { "ID": jsvals.j8({pass: {
          propertieValues: "IlDHibyjRw8pE1V6I6oO"
        }}) }
        }}), 'toggles': jsvals.j8({pass: {
          propertieValues: { "fileUpload": jsvals.j8({pass: {
          propertieValues: "preload"
        }}) }
        }}) }
        }}), 
        'A4': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 'mainList': jsvals.j8({pass: {
          propertieValues: { 
        "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}), 'no name': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}) }
        }}), 
        'A5': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        'forms': jsvals.j8({pass: {
          propertieValues: { 
        'iptsChanges': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 'editData': jsvals.j8({pass: {
          propertieValues: {   }
        }}) }
        }}), 
        "male": jsvals.j8({pass: {
          propertieValues: "Masculino"
        }}), "female": jsvals.j8({pass: {
          propertieValues: "Feminino"
        }}) }
        }}), 
        'A6': jsvals.j8({pass: {
          propertieValues: { 
        'currData': jsvals.j8({pass: {
          propertieValues: { 'locationsList': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}), 
        'lists': jsvals.j8({pass: {
          propertieValues: { 'mainList': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}), 
        'toggles': jsvals.j8({pass: {
          propertieValues: { "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}) }
        }}), 'mainList': jsvals.j8({pass: {
          propertieValues: { 
        "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}), 'no name': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}) }
        }}), 
        'A7': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 'forms': jsvals.j8({pass: {
          propertieValues: { 
        'iptsChanges': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 
        'editData': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 'pickers': jsvals.j8({pass: {
          propertieValues: { 'status': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Disponível"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Disponível"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Indisponível"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Indisponível"
        }})}
        }}) ]
        }}) }
        }}) }
        }}) }
        }}), 
        'A8': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 'mainList': jsvals.j8({pass: {
          propertieValues: { 
        "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}), 'no name': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}) }
        }}), 
        'A9': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 'forms': jsvals.j8({pass: {
          propertieValues: { 
        'iptsChanges': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 
        'editData': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 'pickers': jsvals.j8({pass: {
          propertieValues: { 'typeAccount': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Adm"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Adm"
        }})}
        }}), 
        jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Manager"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Manager"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {
        "id": jsvals.j8({pass: {
          propertieValues: "Reader"
        }}), "label": jsvals.j8({pass: {
          propertieValues: "Reader"
        }})}
        }}) ]
        }}) }
        }}) }
        }}) }
        }}), 
        'A10': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        'mainList': jsvals.j8({pass: {
          propertieValues: { 
        "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}), 'no name': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}), 'toggles': jsvals.j8({pass: {
          propertieValues: { 'sideRight': jsvals.j8({pass: {
          propertieValues: { "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}) }
        }}) }
        }}) }
        }}), 
        'A11': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        'forms': jsvals.j8({pass: {
          propertieValues: { 
        'iptsChanges': jsvals.j8({pass: {
          propertieValues: {   }
        }}), 'editData': jsvals.j8({pass: {
          propertieValues: {   }
        }}) }
        }}), 'currData': jsvals.j8({pass: {
          propertieValues: { "itemID": jsvals.j8({pass: {
          propertieValues: "null"
        }}) }
        }}) }
        }}), 
        'A12': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 
        'mainList': jsvals.j8({pass: {
          propertieValues: { 
        "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}), 'no name': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}), "locationDocID": jsvals.j8({pass: {
          propertieValues: "no value"
        }}) }
        }}), 
        'A13': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 'mainList': jsvals.j8({pass: {
          propertieValues: { 
        "show": jsvals.j8({pass: {
          propertieValues: "false"
        }}), 'no name': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}) }
        }}), 
        'B2': jsvals.j8({pass: {
          propertieValues: { 'forms': jsvals.j8({pass: {
          propertieValues: { 'all': jsvals.j8({pass: {
          propertieValues: { 'userData': jsvals.j8({pass: {
          propertieValues: {   }
        }}) }
        }}) }
        }}) }
        }}), 
        'B4': jsvals.j8({pass: {
          propertieValues: { 
        "totalPurchase": jsvals.j8({pass: {
          propertieValues: "Total da Compra"
        }}), 
        "totalMoney": jsvals.j8({pass: {
          propertieValues: "R$40,00"
        }}), "txtCielo": jsvals.j8({pass: {
          propertieValues: "Ambiente seguro por"
        }}) }
        }}), 
        'B3A': jsvals.j8({pass: {
          propertieValues: { 
        "state": jsvals.j8({pass: {
          propertieValues: "inactive"
        }}), 'currData': jsvals.j8({pass: {
          propertieValues: { 'mainList': jsvals.j8({pass: {
          propertieValues: [   ]
        }}) }
        }}) }
        }}), 
        'B7': jsvals.j8({pass: {
          propertieValues: { 
        "male": jsvals.j8({pass: {
          propertieValues: "Masculino"
        }}), "female": jsvals.j8({pass: {
          propertieValues: "Feminino"
        }}) }
        }}), 
        'B3C': jsvals.j8({pass: {
          propertieValues: { 'currData': jsvals.j8({pass: {
          propertieValues: { 
        "currPrice": jsvals.j8({pass: {
          propertieValues: "0"
        }}), "selecHours": jsvals.j8({pass: {
          propertieValues: "1"
        }}) }
        }}) }
        }}), 
        'ds': jsvals.j8({pass: {
          propertieValues: { 
        'sideLeft': jsvals.j8({pass: {
          propertieValues: { 
        "icons": jsvals.j8({pass: {
          propertieValues: "Ícones"
        }}), 
        "btn": jsvals.j8({pass: {
          propertieValues: "Botões"
        }}), 
        "colors": jsvals.j8({pass: {
          propertieValues: "Cores"
        }}), 
        "forms": jsvals.j8({pass: {
          propertieValues: "Formulário"
        }}), 
        "txtIpt": jsvals.j8({pass: {
          propertieValues: "Entrada de Texto"
        }}), 
        "picker": jsvals.j8({pass: {
          propertieValues: "Picker"
        }}), 
        "radio": jsvals.j8({pass: {
          propertieValues: "Checks & Radios"
        }}), "views": jsvals.j8({pass: {
          propertieValues: "Views"
        }}) }
        }}), 
        'forms': jsvals.j8({pass: {
          propertieValues: { 'pickers': jsvals.j8({pass: {
          propertieValues: { 'pickr1': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {"label": jsvals.j8({pass: {
          propertieValues: "Opção 1"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {"label": jsvals.j8({pass: {
          propertieValues: "Opção 2"
        }})}
        }}) ]
        }}) }
        }}) }
        }}), 'toggles': jsvals.j8({pass: {
          propertieValues: { 
        "fileUpload": jsvals.j8({pass: {
          propertieValues: "preload"
        }}), "loader": jsvals.j8({pass: {
          propertieValues: "true"
        }}) }
        }}) }
        }}), 'BXX': jsvals.j8({pass: {
          propertieValues: { 'currData': jsvals.j8({pass: {
          propertieValues: { 'mainList': jsvals.j8({pass: {
          propertieValues: [ 
        jsvals.j8({pass: {
          propertieValues: {
        "data": jsvals.j8({pass: {
          propertieValues: "08/06/2024"
        }}), 
        "valor": jsvals.j8({pass: {
          propertieValues: "149,90"
        }}), "status": jsvals.j8({pass: {
          propertieValues: "Pagamento Efetuado"
        }})}
        }}), 
        jsvals.j8({pass: {
          propertieValues: {
        "data": jsvals.j8({pass: {
          propertieValues: "08/07/2024"
        }}), 
        "valor": jsvals.j8({pass: {
          propertieValues: "149,90"
        }}), "status": jsvals.j8({pass: {
          propertieValues: "Pagamento Efetuado"
        }})}
        }}), jsvals.j8({pass: {
          propertieValues: {
        "data": jsvals.j8({pass: {
          propertieValues: "08/08/2024"
        }}), 
        "valor": jsvals.j8({pass: {
          propertieValues: "149,90"
        }}), "status": jsvals.j8({pass: {
          propertieValues: "Aguardando..."
        }})}
        }}) ]
        }}) }
        }}) }
        }}) }
        }}), "banner": jsvals.j8({pass: {
          propertieValues: "https://firebasestorage.googleapis.com/v0/b/flaxboll.appspot.com/o/banner_bg.png?alt=media&token=d1360df7-11c7-4172-89b7-ec8765061b1e"
        }})
          });
          const initObj = initCt();
          // console.log(initObj);

          const arrInitFuncs = [
            ()=>{}
          ];

          export const useRoutes = create(() => ({ currRoute }));
          export const useData = create(() => initObj);

          // ---------- set Main Component
          export const Router = () => {
            return (
              <Project
                configData={{
                  screens,
                  initCt,
                  arrInitFuncs,
                }}
              />
            );
          };
        
