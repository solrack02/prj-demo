{"1726240381643":{"actionType":"saveAll","createdAt":"1726240381643","actionID":"1726240381643","userID":"#TEMP","path":"system.capsules.1c53287b-e626-4d16-92ac-597a0b0951f9.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"import * as FB_ALL from 'firebase@10.13.1';\n\ntype Tprops = {\n  args: any;\n  pass: {\n    fbInit: any;\n    arrRefStrings: string[];\n    arrWhere: any;\n    arrFuncs: any[];\n  };\n};\n\nexport const css1 =\n  'color: green; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\nexport const css2 =\n  'color: yellow; background-color: green; font-size: 10px; padding: 2px 6px; border-radius: 3px';\n\nexport const where = async (props: Tprops) => {\n  // ---------- set Props\n  const { args, pass } = props;\n  const { fbInit, arrRefStrings, arrWhere, arrFuncs } = pass;\n\n  // ---------- set Local Imports\n  // const { getFirestore, getDocs, collection, where, query } = await import(\n  //   '@firebase/firestore'\n  // );\n  const firestore = FB_ALL;\n  const { getFirestore, getDocs, collection, where, query } = firestore;\n\n  // ---------- set Caps Inputs\n\n  // ---------- set Short Str\n  const fbErrMsg1 = 'Alguma entrada where foi preenchida errado.';\n  const par1 = 'noComponent';\n\n  // -----------------------------\n  // ---------- set Init Firestore\n  // -----------------------------\n  if (!fbInit) return console.log(fbErrMsg1, { fbInit });\n  const fireInit: any = getFirestore(fbInit[0]);\n\n  const arrConds = [];\n  const newArrWh = () => {\n    const promiseArray = arrWhere.map((capsCond: any) => {\n      const resolve = capsCond();\n\n      arrConds.push(resolve);\n\n      return getDocs(\n        query(refColl, where(resolve.field, resolve.operator, resolve.value)),\n      );\n    });\n\n    return promiseArray;\n  };\n\n  const refColl = collection(fireInit, ...arrRefStrings);\n  const resolvePromise = await Promise.all(newArrWh());\n\n  const arrDocs = [];\n  resolvePromise &&\n    resolvePromise.forEach((snaps: any) => {\n      snaps.forEach((doc: any) => {\n        arrDocs.push(doc.data());\n      });\n    });\n\n  console.log('%cWhere Cond', css1, { arrConds });\n  console.log('%cWhere Docs Found', css2, { arrDocs });\n\n  for (const currFunc of arrFuncs) currFunc(arrDocs, args);\n};\n","newValue":"import * as FB_ALL from 'firebase@10.13.1';\n\ntype Tprops = {\n  args: any;\n  pass: {\n    fbInit: any;\n    arrRefStrings: string[];\n    arrWhere: any;\n    arrFuncs: any[];\n  };\n};\n\nexport const css1 =\n  'color: green; background-color: black; font-size: 11px; padding: 2px 6px; border-radius: 3px';\nexport const css2 =\n  'color: yellow; background-color: green; font-size: 10px; padding: 2px 6px; border-radius: 3px';\n\nexport const where = async (props: Tprops) => {\n  // ---------- set Props\n  const { args, pass } = props;\n  const { fbInit, arrRefStrings, arrWhere, arrFuncs } = pass;\n\n  // ---------- set Local Imports\n  // const { getFirestore, getDocs, collection, where, query } = await import(\n  //   '@firebase/firestore'\n  // );\n  const firestore = FB_ALL;\n  const { getFirestore, getDocs, collection, where, query } = firestore;\n\n  // ---------- set Caps Inputs\n\n  // ---------- set Short Str\n  const fbErrMsg1 = 'Alguma entrada where foi preenchida errado.';\n  const par1 = 'noComponent';\n\n  // -----------------------------\n  // ---------- set Init Firestore\n  // -----------------------------\n  if (!fbInit) return console.log(fbErrMsg1, { fbInit });\n  const fireInit: any = getFirestore(fbInit[0]);\n\n  const arrConds = [];\n  const newArrWh = () => {\n    const promiseArray = arrWhere.map((capsCond: any) => {\n      const resolve = capsCond();\n\n      arrConds.push(resolve);\n\n      return getDocs(\n        query(refColl, where(resolve.field, resolve.operator, resolve.value)),\n      );\n    });\n\n    return promiseArray;\n  };\n\n  const refColl = collection(fireInit, ...arrRefStrings);\n  const resolvePromise = await Promise.all(newArrWh());\n\n  const arrDocs = [];\n  resolvePromise &&\n    resolvePromise.forEach((snaps: any) => {\n      snaps.forEach((doc: any) => {\n        arrDocs.push(doc.data());\n      });\n    });\n\n  console.log('%cWhere Cond', css1, { arrConds });\n  console.log('%cWhere Docs Found', css2, { arrDocs });\n\n  for (const currFunc of arrFuncs) currFunc(arrDocs, args);\n};"}}